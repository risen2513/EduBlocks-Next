{"version":3,"sources":["webpack:///./src/blocks/microbit/radio/definitions.ts"],"names":["define","Blocks","init","this","appendDummyInput","appendField","Blockly","FieldTextInput","setPreviousStatement","setNextStatement","setColour","setTooltip","setHelpUrl","appendValueInput","setCheck","FieldVariable","appendStatementInput"],"mappings":"kHAAc,SAAUA,EAAOC,GAG7BA,EAAO,aAAe,CACpBC,KAAM,WACJC,KAAKC,mBACFC,YAAY,eACZA,YAAY,IAAIC,QAAQC,eAAe,WAAY,QACnDF,YAAY,KACfF,KAAKK,sBAAqB,EAAM,MAChCL,KAAKM,kBAAiB,EAAM,MAC5BN,KAAKO,UAAU,UAAW,UAAW,WACrCP,KAAKQ,WAAW,wBAChBR,KAAKS,WAAW,MAIpBX,EAAO,gBAAkB,CACvBC,KAAM,WACJC,KAAKC,mBACFC,YAAY,eACfF,KAAKU,iBAAiB,QACnBC,SAAS,MACZX,KAAKC,mBACFC,YAAY,KACfF,KAAKK,sBAAqB,EAAM,MAChCL,KAAKM,kBAAiB,EAAM,MAC5BN,KAAKO,UAAU,UAAW,UAAW,WACrCP,KAAKQ,WAAW,wBAChBR,KAAKS,WAAW,MAKpBX,EAAO,aAAe,CACpBC,KAAM,WACJC,KAAKC,mBACFC,YAAY,iBACZA,YAAY,IAAIC,QAAQC,eAAe,IAAK,QAC5CF,YAAY,KACfF,KAAKK,sBAAqB,EAAM,MAChCL,KAAKM,kBAAiB,EAAM,MAC5BN,KAAKO,UAAU,UAAW,UAAW,WACrCP,KAAKQ,WAAW,mBAChBR,KAAKS,WAAW,MAIpBX,EAAO,gBAAkB,CACvBC,KAAM,WACJC,KAAKC,mBACFC,YAAY,iBACfF,KAAKU,iBAAiB,QACnBC,SAAS,MACZX,KAAKC,mBACFC,YAAY,KACfF,KAAKK,sBAAqB,EAAM,MAChCL,KAAKM,kBAAiB,EAAM,MAC5BN,KAAKO,UAAU,UAAW,UAAW,WACrCP,KAAKQ,WAAW,mBAChBR,KAAKS,WAAW,MAIpBX,EAAO,WAAa,CAClBC,KAAM,WACJC,KAAKC,mBACFC,YAAY,gBACfF,KAAKK,sBAAqB,EAAM,MAChCL,KAAKM,kBAAiB,EAAM,MAC5BN,KAAKO,UAAU,UAAW,UAAW,WACrCP,KAAKQ,WAAW,gBAChBR,KAAKS,WAAW,MAIpBX,EAAO,WAAa,CAClBC,KAAM,WACJC,KAAKC,mBACFC,YAAY,cACfF,KAAKK,sBAAqB,EAAM,MAChCL,KAAKM,kBAAiB,EAAM,MAC5BN,KAAKO,UAAU,UAAW,UAAW,WACrCP,KAAKQ,WAAW,iBAChBR,KAAKS,WAAW,MAIpBX,EAAO,WAAa,CAClBC,KAAM,WACJC,KAAKC,mBACFC,YAAY,OACZA,YAAY,IAAIC,QAAQS,cAAc,YAAa,YACnDV,YAAY,QACZA,YAAY,IAAIC,QAAQC,eAAe,IAAK,YAC5CF,YAAY,KACfF,KAAKa,qBAAqB,MACvBF,SAAS,MACZX,KAAKK,sBAAqB,EAAM,MAChCL,KAAKM,kBAAiB,EAAM,MAC5BN,KAAKO,UAAU,UAAW,UAAW,WACrCP,KAAKQ,WAAW,gDAChBR,KAAKS,WAAW,MAIpBX,EAAO,YAAc,CACnBC,KAAM,WACJC,KAAKC,mBACFC,YAAY,IAAIC,QAAQS,cAAc,YAAa,YACnDV,YAAY,sBACfF,KAAKK,sBAAqB,EAAM,MAChCL,KAAKM,kBAAiB,EAAM,MAC5BN,KAAKO,UAAU,UAAW,UAAW,WACrCP,KAAKQ,WAAW,uBAChBR,KAAKS,WAAW,MAnHtB","file":"js/chunk-2d0d4035.7661ccf1.js","sourcesContent":["export default function define(Blocks: Blockly.BlockDefinitions) {\n\n\n  Blocks['radiosend'] = {\n    init: function () {\n      this.appendDummyInput()\n        .appendField('radio.send(')\n        .appendField(new Blockly.FieldTextInput('\"hello\"'), 'send')\n        .appendField(')');\n      this.setPreviousStatement(true, null);\n      this.setNextStatement(true, null);\n      this.setColour('#7EE516', '#7EE516', '#72ad33');\n      this.setTooltip('Send a radio command');\n      this.setHelpUrl('');\n    },\n  };\n\n  Blocks['radiosendnew'] = {\n    init: function () {\n      this.appendDummyInput()\n        .appendField('radio.send(');\n      this.appendValueInput('text')\n        .setCheck(null);\n      this.appendDummyInput()\n        .appendField(')');\n      this.setPreviousStatement(true, null);\n      this.setNextStatement(true, null);\n      this.setColour('#7EE516', '#7EE516', '#72ad33');\n      this.setTooltip('Send a radio command');\n      this.setHelpUrl('');\n    },\n  };\n\n\n  Blocks['radioconf'] = {\n    init: function () {\n      this.appendDummyInput()\n        .appendField('radio.config(')\n        .appendField(new Blockly.FieldTextInput(''), 'conf')\n        .appendField(')');\n      this.setPreviousStatement(true, null);\n      this.setNextStatement(true, null);\n      this.setColour('#7EE516', '#7EE516', '#72ad33');\n      this.setTooltip('Configure Radio');\n      this.setHelpUrl('');\n    },\n  };\n\n  Blocks['radioconfnew'] = {\n    init: function () {\n      this.appendDummyInput()\n        .appendField('radio.config(');\n      this.appendValueInput('text')\n        .setCheck(null);\n      this.appendDummyInput()\n        .appendField(')');\n      this.setPreviousStatement(true, null);\n      this.setNextStatement(true, null);\n      this.setColour('#7EE516', '#7EE516', '#72ad33');\n      this.setTooltip('Configure Radio');\n      this.setHelpUrl('');\n    },\n  };\n\n  Blocks['imradio'] = {\n    init: function () {\n      this.appendDummyInput()\n        .appendField('import radio');\n      this.setPreviousStatement(true, null);\n      this.setNextStatement(true, null);\n      this.setColour('#7EE516', '#7EE516', '#72ad33');\n      this.setTooltip('Import Radio');\n      this.setHelpUrl('');\n    },\n  };\n\n  Blocks['radioon'] = {\n    init: function () {\n      this.appendDummyInput()\n        .appendField('radio.on()');\n      this.setPreviousStatement(true, null);\n      this.setNextStatement(true, null);\n      this.setColour('#7EE516', '#7EE516', '#72ad33');\n      this.setTooltip('Turn Radio On');\n      this.setHelpUrl('');\n    },\n  };\n\n  Blocks['ifradio'] = {\n    init: function () {\n      this.appendDummyInput()\n        .appendField('if ')\n        .appendField(new Blockly.FieldVariable('incoming'), 'incoming')\n        .appendField(' == ')\n        .appendField(new Blockly.FieldTextInput(''), 'sentitem')\n        .appendField(':');\n      this.appendStatementInput('DO')\n        .setCheck(null);\n      this.setPreviousStatement(true, null);\n      this.setNextStatement(true, null);\n      this.setColour('#7EE516', '#7EE516', '#72ad33');\n      this.setTooltip('Check if there is an incoming radio command.');\n      this.setHelpUrl('');\n    },\n  };\n\n  Blocks['incoming'] = {\n    init: function () {\n      this.appendDummyInput()\n        .appendField(new Blockly.FieldVariable('incoming'), 'incoming')\n        .appendField(' = radio.receive()');\n      this.setPreviousStatement(true, null);\n      this.setNextStatement(true, null);\n      this.setColour('#7EE516', '#7EE516', '#72ad33');\n      this.setTooltip('Initialize receiver');\n      this.setHelpUrl('');\n    },\n  };\n\n\n\n}"],"sourceRoot":""}