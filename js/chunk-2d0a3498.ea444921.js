(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0a3498"],{"0211":function(t,e,n){"use strict";function s(t){t["microphone_current"]={init:function(){this.appendDummyInput().appendField("microphone.current_sound()"),this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND),this.setOutput(!0,null),this.setColour("#008080"),this.setTooltip("Get current sound loud/quiet"),this.setHelpUrl("")}},t["microphone_level"]={init:function(){this.appendDummyInput().appendField("microphone.").appendField(new Blockly.FieldDropdown([["LOUD","LOUD"],["QUIET","QUIET"]]),"level"),this.setOutput(!0,null),this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND),this.setColour("#008080"),this.setTooltip("Reference the onboard microphone level"),this.setHelpUrl("")}},t["microphone_sound"]={init:function(){this.appendDummyInput().appendField("microphone.sound_level()"),this.setOutput(!0,null),this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND),this.setColour("#008080"),this.setTooltip("Reference the onboard microphone level"),this.setHelpUrl("")}},t["microphone_wassound"]={init:function(){this.appendDummyInput().appendField("microphone.was_sound("),this.appendValueInput("level").setCheck(null),this.appendDummyInput().appendField(")"),this.setInputsInline(!0),this.setOutput(!0,null),this.setColour("#008080"),this.setTooltip("Check if a loud/quiet sound occurred since the last call to was_sound()"),this.setHelpUrl("")}},t["microphone_getsounds"]={init:function(){this.appendDummyInput().appendField("microphone.get_sounds()"),this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND),this.setOutput(!0,null),this.setColour("#008080"),this.setTooltip("Get history of sounds since last call to get_sounds()"),this.setHelpUrl("")}}}n.r(e),n.d(e,"default",(function(){return s}))}}]);
//# sourceMappingURL=chunk-2d0a3498.ea444921.js.map