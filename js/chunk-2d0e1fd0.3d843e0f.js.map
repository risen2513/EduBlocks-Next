{"version":3,"sources":["webpack:///./src/blocks/microbit/pins/definitions.ts"],"names":["define","Blocks","init","this","appendDummyInput","appendField","appendValueInput","setCheck","setOutput","setOutputShape","Blockly","OUTPUT_SHAPE_ROUND","setColour","setTooltip","setHelpUrl","setInputsInline","setPreviousStatement","setNextStatement","FieldTextInput"],"mappings":"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","file":"js/chunk-2d0e1fd0.3d843e0f.js","sourcesContent":["export default function define(Blocks: Blockly.BlockDefinitions) {\n\n  Blocks['pintouchednew'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(\"pin\")\n      this.appendValueInput(\"text\")\n          .setCheck(null);\n      this.appendDummyInput()\n          .appendField(\".is_touched()\");\n      this.setOutput(true, null);\n      this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);\n      this.setColour(\"#E51616\",\"#E51616\",\"#a82f2f\");\n   this.setTooltip(\"If this pin is touched\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\n  Blocks['logotouched'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(\"pin_logo.is_touched()\")\n      this.setOutput(true, null);\n      this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);\n      this.setColour(\"#E51616\",\"#E51616\",\"#a82f2f\");\n   this.setTooltip(\"If logo pin is touched\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\n  Blocks['pin_speaker'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(\"pin_speaker\");\n      this.setInputsInline(true);\n      this.setOutput(true, null);\n      this.setColour(\"#E51616\");\n   this.setTooltip(\"Reference onboard speaker pin\");\n   this.setHelpUrl(\"\");\n    }\n  };\n  \n  Blocks['analogreadnew'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(\"pin\")\n      this.appendValueInput(\"text\")\n          .setCheck(null);\n      this.appendDummyInput()\n          .appendField(\".read_analog()\");\n      this.setOutput(true, null);\n      this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);\n      this.setColour(\"#E51616\",\"#E51616\",\"#a82f2f\");\n   this.setTooltip(\"Read Analog\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\n  Blocks['digitalreadnew'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(\"pin\")\n      this.appendValueInput(\"text\")\n          .setCheck(null);\n      this.appendDummyInput()\n          .appendField(\".read_digital()\");\n      this.setOutput(true, null);\n      this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);\n      this.setColour(\"#E51616\",\"#E51616\",\"#a82f2f\");\n   this.setTooltip(\"Read Digital\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\n  Blocks['writeanalognew'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(\"pin\")\n      this.appendValueInput(\"text\")\n          .setCheck(null);\n      this.appendDummyInput()\n          .appendField(\".write_analog(\")\n      this.appendValueInput(\"text1\")\n          .setCheck(null);\n      this.appendDummyInput()\n          .appendField(\")\");\n      this.setPreviousStatement(true, null);\n      this.setNextStatement(true, null);\n      this.setColour(\"#E51616\",\"#E51616\",\"#a82f2f\");\n   this.setTooltip(\"Write Analog\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\n  Blocks['writedigitalnew'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(\"pin\")\n      this.appendValueInput(\"text\")\n          .setCheck(null);\n      this.appendDummyInput()\n          .appendField(\".write_digital(\")\n      this.appendValueInput(\"text1\")\n          .setCheck(null);\n      this.appendDummyInput()\n          .appendField(\")\");\n      this.setPreviousStatement(true, null);\n      this.setNextStatement(true, null);\n      this.setColour(\"#E51616\",\"#E51616\",\"#a82f2f\");\n   this.setTooltip(\"Write Digital\");\n   this.setHelpUrl(\"\");\n    }\n  };\n  \n  Blocks['pin_pull'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(\"pin\")\n      this.appendValueInput(\"text\")\n          .setCheck(null);\n      this.appendDummyInput()\n          .appendField(\".set_pull(\")\n      this.appendValueInput(\"text1\")\n          .setCheck(null);\n      this.appendDummyInput()\n          .appendField(\")\");\n      this.setPreviousStatement(true, null);\n      this.setNextStatement(true, null);\n      this.setColour(\"#E51616\",\"#E51616\",\"#a82f2f\");\n   this.setTooltip(\"Set Pin Pull Value\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\n  Blocks['pintouched'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(\"pin\")\n          .appendField(new Blockly.FieldTextInput(\"0\"), \"pinno\")\n          .appendField(\".is_touched()\");\n      this.setOutput(true, null);\n      this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);\n      this.setColour(\"#E51616\",\"#E51616\",\"#a82f2f\");\n   this.setTooltip(\"If this pin is touched\");\n   this.setHelpUrl(\"\");\n    }\n  };\n  \n  Blocks['analogread'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(\"pin\")\n          .appendField(new Blockly.FieldTextInput(\"0\"), \"pinno\")\n          .appendField(\".read_analog()\");\n      this.setOutput(true, null);\n      this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);\n      this.setColour(\"#E51616\",\"#E51616\",\"#a82f2f\");\n   this.setTooltip(\"Read Analog\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\n  Blocks['digitalread'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(\"pin\")\n          .appendField(new Blockly.FieldTextInput(\"0\"), \"pinno\")\n          .appendField(\".read_digital()\");\n      this.setOutput(true, null);\n      this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);\n      this.setColour(\"#E51616\",\"#E51616\",\"#a82f2f\");\n   this.setTooltip(\"Read Digital\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\n  Blocks['writeanalog'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(\"pin\")\n          .appendField(new Blockly.FieldTextInput(\"0\"), \"pinno\")\n          .appendField(\".write_analog(\")\n          .appendField(new Blockly.FieldTextInput(\"\"), \"analog\")\n          .appendField(\")\");\n      this.setPreviousStatement(true, null);\n      this.setNextStatement(true, null);\n      this.setColour(\"#E51616\",\"#E51616\",\"#a82f2f\");\n   this.setTooltip(\"Write Analog\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\n  Blocks['writedigital'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(\"pin\")\n          .appendField(new Blockly.FieldTextInput(\"0\"), \"pinno\")\n          .appendField(\".write_digital(\")\n          .appendField(new Blockly.FieldTextInput(\"\"), \"digital\")\n          .appendField(\")\");\n      this.setPreviousStatement(true, null);\n      this.setNextStatement(true, null);\n      this.setColour(\"#E51616\",\"#E51616\",\"#a82f2f\");\n   this.setTooltip(\"Write Digital\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\n}\n"],"sourceRoot":""}