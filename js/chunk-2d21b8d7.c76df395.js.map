{"version":3,"sources":["webpack:///./src/blocks/circuitpython/advanced/definitions.ts"],"names":["define","Blocks","advcol","init","this","appendDummyInput","appendField","setPreviousStatement","setNextStatement","setColour","setTooltip","setHelpUrl","setOutput","setOutputShape","Blockly","OUTPUT_SHAPE_ROUND","appendValueInput","setCheck","setInputsInline"],"mappings":"gHAAc,SAAUA,EAAOC,GAC7B,IAAIC,EAAS,UAIbD,EAAO,gBAAkB,CACvBE,KAAM,WACJC,KAAKC,mBACFC,YAAY,0BACfF,KAAKG,sBAAqB,EAAM,MAChCH,KAAKI,kBAAiB,EAAM,MAC5BJ,KAAKK,UAAUP,GACfE,KAAKM,WAAW,wCAChBN,KAAKO,WAAW,MAIpBV,EAAO,WAAa,CAClBE,KAAM,WACJC,KAAKC,mBACAC,YAAY,mCACjBF,KAAKQ,WAAU,EAAM,MACrBR,KAAKK,UAAUP,GACfE,KAAKS,eAAeC,QAAQC,oBAC/BX,KAAKM,WAAW,IAChBN,KAAKO,WAAW,MAMlBV,EAAO,kBAAoB,CAC1BE,KAAM,WACJC,KAAKC,mBACFC,YAAY,kBACfF,KAAKG,sBAAqB,EAAM,MAChCH,KAAKI,kBAAiB,EAAM,MAC5BJ,KAAKK,UAAUP,GACfE,KAAKM,WAAW,gCAChBN,KAAKO,WAAW,MAIlBV,EAAO,mBAAqB,CAC1BE,KAAM,WACJC,KAAKC,mBACAC,YAAY,oBACjBF,KAAKY,iBAAiB,SACjBC,SAAS,MACdb,KAAKC,mBACAC,YAAY,MACjBF,KAAKY,iBAAiB,SACjBC,SAAS,MACdb,KAAKC,mBACAC,YAAY,KACjBF,KAAKc,iBAAgB,GACrBd,KAAKG,sBAAqB,EAAM,MAChCH,KAAKI,kBAAiB,EAAM,MAC5BJ,KAAKK,UAAUP,GAClBE,KAAKM,WAAW,IAChBN,KAAKO,WAAW,MAIjBV,EAAO,QAAU,CACfE,KAAM,WACJC,KAAKC,mBACAC,YAAY,SACjBF,KAAKY,iBAAiB,SACjBC,SAAS,MACdb,KAAKC,mBACAC,YAAY,MACjBF,KAAKY,iBAAiB,SACjBC,SAAS,MACdb,KAAKC,mBACAC,YAAY,KACjBF,KAAKc,iBAAgB,GACrBd,KAAKQ,WAAU,EAAM,MACrBR,KAAKS,eAAeC,QAAQC,oBAC5BX,KAAKK,UAAUP,GAClBE,KAAKM,WAAW,IAChBN,KAAKO,WAAW,MAIjBV,EAAO,SAAW,CAChBE,KAAM,WACJC,KAAKY,iBAAiB,SACjBC,SAAS,MACdb,KAAKC,mBACAC,YAAY,WACjBF,KAAKY,iBAAiB,SACjBC,SAAS,MACdb,KAAKC,mBACAC,YAAY,KACjBF,KAAKc,iBAAgB,GACrBd,KAAKG,sBAAqB,EAAM,MAChCH,KAAKI,kBAAiB,EAAM,MAC5BJ,KAAKK,UAAUP,GAClBE,KAAKM,WAAW,IAChBN,KAAKO,WAAW,MApGnB","file":"js/chunk-2d21b8d7.c76df395.js","sourcesContent":["export default function define(Blocks: Blockly.BlockDefinitions) {\n  let advcol = \"#22a6b3\"\n\n  // CPU Temp\n\n  Blocks['import_micro'] = {\n    init: function () {\n      this.appendDummyInput()\n        .appendField('import microcontroller');\n      this.setPreviousStatement(true, null);\n      this.setNextStatement(true, null);\n      this.setColour(advcol);\n      this.setTooltip('Imports the microcontroller library.');\n      this.setHelpUrl('');\n    },\n  };\n\n  Blocks['cputemp'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(\"microcontroller.cpu.temperature\");\n      this.setOutput(true, null);\n      this.setColour(advcol);\n      this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);\n   this.setTooltip(\"\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\n // Storage\n\n Blocks['import_storage'] = {\n  init: function () {\n    this.appendDummyInput()\n      .appendField('import storage');\n    this.setPreviousStatement(true, null);\n    this.setNextStatement(true, null);\n    this.setColour(advcol);\n    this.setTooltip('Imports the storage library.');\n    this.setHelpUrl('');\n    },\n  };\n\n  Blocks['storage_remount'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(\"storage.remount(\");\n      this.appendValueInput(\"text1\")\n          .setCheck(null);\n      this.appendDummyInput()\n          .appendField(\", \");\n      this.appendValueInput(\"text2\")\n          .setCheck(null);\n      this.appendDummyInput()\n          .appendField(\")\");\n      this.setInputsInline(true);\n      this.setPreviousStatement(true, null);\n      this.setNextStatement(true, null);\n      this.setColour(advcol);\n   this.setTooltip(\"\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\n  Blocks['open'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(\"open(\");\n      this.appendValueInput(\"text1\")\n          .setCheck(null);\n      this.appendDummyInput()\n          .appendField(\", \");\n      this.appendValueInput(\"text2\")\n          .setCheck(null);\n      this.appendDummyInput()\n          .appendField(\")\");\n      this.setInputsInline(true);\n      this.setOutput(true, null);\n      this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);\n      this.setColour(advcol);\n   this.setTooltip(\"\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\n  Blocks['write'] = {\n    init: function() {\n      this.appendValueInput(\"text1\")\n          .setCheck(null);\n      this.appendDummyInput()\n          .appendField(\".write(\");\n      this.appendValueInput(\"text2\")\n          .setCheck(null);\n      this.appendDummyInput()\n          .appendField(\")\");\n      this.setInputsInline(true);\n      this.setPreviousStatement(true, null);\n      this.setNextStatement(true, null);\n      this.setColour(advcol);\n   this.setTooltip(\"\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\n\n}"],"sourceRoot":""}