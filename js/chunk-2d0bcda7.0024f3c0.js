(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0bcda7"],{"2a02":function(t,e,n){"use strict";function i(t){var e="#ff0066",n="#b3235a",i="#ff0066";t["events_start_here"]={init:function(){this.appendDummyInput().appendField("# Start code here"),this.setNextStatement(!0,null),this.setColour("#FFBF00"),Blockly.BlockSvg.START_HAT=!0}},t["import_microbit"]={init:function(){this.appendDummyInput().appendField("from microbit import *"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip("Imports the microbit library."),this.setHelpUrl("")}},t["import_signal"]={init:function(){this.appendDummyInput().appendField("from signal import pause"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip("Imports the signal library."),this.setHelpUrl("")}},t["import_utime"]={init:function(){this.appendDummyInput().appendField("import utime"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip("Imports the utime library."),this.setHelpUrl("")}},t["pause_s"]={init:function(){this.appendDummyInput().appendField("pause()"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip("Pause"),this.setHelpUrl("")}},t["random"]={init:function(){this.appendDummyInput().appendField("import random"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip("Imports the random library."),this.setHelpUrl("")}},t["while_true"]={init:function(){this.appendDummyInput().appendField("while True:"),this.appendStatementInput("DO").appendField(""),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip("Forever loop."),this.setHelpUrl("https://t.co/PCZC5EFe4D")}},t["pass"]={init:function(){this.appendDummyInput().appendField("pass"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip("Pass to the next command"),this.setHelpUrl("")}},t["if"]={init:function(){this.appendDummyInput().appendField("if").appendField(new Blockly.FieldTextInput("0"),"var").appendField(":"),this.appendStatementInput("DO").appendField(""),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip("If Statement."),this.setHelpUrl("")}},t["class"]={init:function(){this.appendDummyInput().appendField("class"),this.appendValueInput("class").setCheck(null),this.appendDummyInput().appendField(":"),this.appendStatementInput("DO").appendField(""),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip("Class Statement."),this.setHelpUrl("")}},t["varprint"]={init:function(){this.appendDummyInput().appendField("print("),this.appendValueInput("var").setCheck(null),this.appendDummyInput().appendField(")"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip("Use this to print a variable, a number, or even a string if you put in the quotes yourself."),this.setHelpUrl("")}},t["ifcroc"]={init:function(){this.appendDummyInput().appendField("if").appendField(new Blockly.FieldTextInput("this"),"this").appendField(new Blockly.FieldDropdown([[">",">"],["<","<"]]),"crocsigns").appendField(new Blockly.FieldTextInput("that"),"that").appendField(":"),this.appendStatementInput("DO").setCheck(null),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip("If statement with greater and less than"),this.setHelpUrl("")}},t["varminus"]={init:function(){this.appendDummyInput().appendField(new Blockly.FieldTextInput("0"),"1").appendField("-=").appendField(new Blockly.FieldTextInput("0"),"2"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip("Variable with - and ="),this.setHelpUrl("")}},t["comma"]={init:function(){this.appendValueInput("in1").setCheck(null),this.appendDummyInput().appendField(new Blockly.FieldDropdown([[",",","],["+","+"]]),"commadd"),this.appendValueInput("in2").setCheck(null),this.setInputsInline(!0),this.setOutput(!0,null),this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND),this.setColour(e)}},t["for"]={init:function(){this.appendDummyInput().appendField("for"),this.appendValueInput("letter").setCheck(null),this.appendDummyInput().appendField("in range("),this.appendValueInput("no").setCheck(null),this.appendDummyInput().appendField("):"),this.appendStatementInput("DO").setCheck(null),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip(""),this.setHelpUrl("Create a for loop")}},t["advancedforloops"]={init:function(){this.appendDummyInput().appendField("for"),this.appendValueInput("x").setCheck(null),this.appendDummyInput().appendField("in"),this.appendValueInput("y").setCheck(null),this.appendDummyInput().appendField(":"),this.appendStatementInput("DO").setCheck(null),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip(""),this.setHelpUrl("")}},t["ifequals"]={init:function(){this.appendDummyInput().appendField("if").appendField(new Blockly.FieldTextInput("this"),"this").appendField("==").appendField(new Blockly.FieldTextInput("that"),"that"),this.appendStatementInput("DO").setCheck(null),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip(""),this.setHelpUrl("")}},t["importinputs"]={init:function(){this.appendDummyInput().appendField("import inputs"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip(""),this.setHelpUrl("")}},t["return2"]={init:function(){this.appendDummyInput().appendField("return"),this.appendValueInput("return").setCheck(null),this.setPreviousStatement(!0,null),this.setInputsInline(!0),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip(""),this.setHelpUrl("")}},t["elif"]={init:function(){this.appendDummyInput().appendField("elif").appendField(new Blockly.FieldTextInput("0"),"var").appendField(":"),this.appendStatementInput("DO").appendField(""),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip("Elif Statement."),this.setHelpUrl("")}},t["else"]={init:function(){this.appendDummyInput().appendField("else:"),this.appendStatementInput("DO").appendField(""),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip("Else statement"),this.setHelpUrl("")}},t["df"]={init:function(){this.appendValueInput("def").setCheck(null),this.appendDummyInput().appendField("("),this.appendValueInput("params").setCheck(null),this.appendDummyInput().appendField(")"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip("call a define function"),this.setHelpUrl("")}},t["whileout"]={init:function(){this.appendDummyInput().appendField("while"),this.appendValueInput("cond").setCheck("Boolean"),this.appendDummyInput().appendField(":"),this.appendStatementInput("DO").appendField(""),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip(""),this.setHelpUrl("")}},t["import_math"]={init:function(){this.appendDummyInput().appendField("import math"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip("Imports the math library."),this.setHelpUrl("")}},t["import_audio"]={init:function(){this.appendDummyInput().appendField("import audio"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip("Imports the audio library."),this.setHelpUrl("")}},t["sleep"]={init:function(){this.appendDummyInput().appendField("sleep("),this.appendValueInput("sleep"),this.appendDummyInput().appendField(")"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip("Sleep"),this.setHelpUrl("")}},t["sleepnew"]={init:function(){this.appendDummyInput().appendField("sleep("),this.appendValueInput("sleep").setCheck(null),this.appendDummyInput().appendField(")"),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip("Wait (in milliseconds)"),this.setHelpUrl("")}},t["sleepus"]={init:function(){this.appendDummyInput().appendField("utime.sleep_us("),this.appendValueInput("sleep").setCheck(null),this.appendDummyInput().appendField(")"),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip("Wait (in milliseconds)"),this.setHelpUrl("")}},t["print"]={init:function(){this.appendDummyInput().appendField('print("'),this.appendValueInput("print").setCheck(null),this.appendDummyInput().appendField('" )'),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip("Use this to print to the output box."),this.setHelpUrl("")}},t["printnew"]={init:function(){this.appendDummyInput().appendField('print("'),this.appendValueInput("text").setCheck(null),this.appendDummyInput().appendField('" )'),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip("Use this to print a string to the output box."),this.setHelpUrl("")}},t["equalsblock"]={init:function(){this.appendDummyInput().appendField(new Blockly.FieldTextInput("0"),"1").appendField("=").appendField(new Blockly.FieldTextInput("0"),"2"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip(""),this.setHelpUrl("")}},t["equalsblocknew"]={init:function(){this.appendValueInput("text1").setCheck(null),this.appendDummyInput().appendField(new Blockly.FieldDropdown([["=","="],["+=","+="],["-=","-="]]),"NAME"),this.appendValueInput("text2").setCheck(null),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip("Assign, increment or decrement a variable"),this.setHelpUrl(""),this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND),this.setOutput(!0,"Boolean")}},t["define"]={init:function(){this.appendDummyInput().appendField("def "),this.appendValueInput("1").setCheck(null),this.appendDummyInput().appendField("("),this.appendValueInput("2").setCheck(null),this.appendDummyInput().appendField("):"),this.appendStatementInput("DO").setCheck(null),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip(""),this.setHelpUrl("")}},t["greater"]={init:function(){this.appendDummyInput().appendField("while").appendField(new Blockly.FieldTextInput(""),"1").appendField(">").appendField(new Blockly.FieldTextInput(""),"v").appendField(":"),this.appendStatementInput("DO").appendField(""),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip(""),this.setHelpUrl("")}},t["ifinline"]={init:function(){this.appendDummyInput().appendField("if"),this.appendValueInput("iftext").setCheck("Boolean"),this.appendDummyInput().appendField(":"),this.appendStatementInput("ifstate").setCheck(null),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip("If block with inline input"),this.setHelpUrl("")}},t["typeanything"]={init:function(){this.appendValueInput("stuff").setCheck(null),this.appendDummyInput().appendField("# your own code"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip("Type any python code into this block"),this.setHelpUrl("")}},t["elifinline"]={init:function(){this.appendDummyInput().appendField("elif"),this.appendValueInput("iftext").setCheck(null),this.appendDummyInput().appendField(":"),this.appendStatementInput("ifstate").setCheck(null),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip("ElIf block with inline input"),this.setHelpUrl("")}},t["buttonapressed"]={init:function(){this.appendDummyInput().appendField("button_").appendField(new Blockly.FieldDropdown([["a","a"],["b","b"]]),"NAME").appendField(".is_pressed()"),this.setInputsInline(!1),this.setOutput(!0,null),this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND),this.setColour(e,i,n),this.setTooltip("Button A Pressed"),this.setHelpUrl("")}},t["internal"]={init:function(){var t=[["==","=="],["!=","!="],["<","<"],["<=","<="],[">",">"],[">=",">="]],s=t;this.appendValueInput("first").setCheck(null),this.appendDummyInput().appendField(new Blockly.FieldDropdown(s),"choose"),this.appendValueInput("last").setCheck(null),this.setInputsInline(!0),this.setOutput(!0,null),this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND),this.setColour(e,i,n),this.setTooltip(""),this.setHelpUrl("")}},t["textinline"]={init:function(){this.appendDummyInput().appendField(new Blockly.FieldTextInput(""),"text"),this.setInputsInline(!0),this.setOutput(!0,null),this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND),this.setColour("#FFFFFF","#FFFFFF",n),this.setTooltip("Text input for inline input"),this.setHelpUrl("")}},t["stringinline"]={init:function(){this.appendDummyInput().appendField(new Blockly.FieldString(""),"text"),this.setInputsInline(!0),this.setOutput(!0,null),this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND),this.setColour("#FFFFFF","#FFFFFF",n),this.setTooltip("String input for inline input"),this.setHelpUrl("")}},t["sliderinline"]={init:function(){this.appendDummyInput().appendField(new Blockly.FieldSlider("0","0","1","1","1","Value"),"slider"),this.setInputsInline(!0),this.setOutput(!0,null),this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND),this.setColour("#FFFFFF","#FFFFFF",n),this.setTooltip("Slider input for inline input"),this.setHelpUrl("")}},t["varinlines"]={init:function(){this.appendDummyInput().appendField(new Blockly.FieldVariable("variable"),"var").appendField(new Blockly.FieldDropdown([["=","="],["+=","+="],["-=","-="]]),"NAME"),this.appendValueInput("value").setCheck(null),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip("assign a value, increment, or decrement a variable"),this.setHelpUrl("")}},t["boolstatus"]={init:function(){this.appendDummyInput().appendField(new Blockly.FieldDropdown([["True","True"],["False","False"]]),"bool"),this.setOutput(!0,"Boolean"),this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND),this.setColour(e,i,n),this.setTooltip(""),this.setHelpUrl("")}},t["andor"]={init:function(){this.appendValueInput("first").setCheck(null),this.appendDummyInput().appendField(new Blockly.FieldDropdown([["and","and"],["or","or"]]),"choose"),this.appendValueInput("last").setCheck(null),this.setInputsInline(!0),this.setOutput(!0,null),this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND),this.setColour(e,i,n),this.setTooltip(""),this.setHelpUrl("")}},t["not"]={init:function(){this.appendDummyInput().appendField("not"),this.appendValueInput("bool").setCheck(null),this.setInputsInline(!0),this.setOutput(!0,null),this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND),this.setColour(e,i,n),this.setTooltip("negates a Boolean value"),this.setHelpUrl("")}},t["operators3"]={init:function(){this.appendValueInput("first").setCheck(null),this.appendDummyInput().appendField(new Blockly.FieldDropdown([["+","+"],["-","-"],["/","/"],["%","%"],["*","*"]]),"operators"),this.appendValueInput("last").setCheck(null),this.setInputsInline(!0),this.setOutput(!0,null),this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND),this.setColour(e,i,n),this.setTooltip(""),this.setHelpUrl("")}},t["mbint"]={init:function(){this.appendDummyInput().appendField("int("),this.appendValueInput("bool").setCheck(null),this.appendDummyInput().appendField(")"),this.setInputsInline(!0),this.setOutput(!0,null),this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND),this.setColour(e,i,n),this.setTooltip("Changes to an int"),this.setHelpUrl("")}},t["ticks"]={init:function(){this.appendDummyInput().appendField("utime.ticks_us()"),this.setInputsInline(!0),this.setOutput(!0,null),this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND),this.setColour(e,i,n),this.setTooltip("Ticks US, Utime"),this.setHelpUrl("")}},t["break"]={init:function(){this.appendDummyInput().appendField("break"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(e,i,n),this.setTooltip("breaks out of a loop"),this.setHelpUrl("")}}}n.r(e),n.d(e,"default",(function(){return i}))}}]);
//# sourceMappingURL=chunk-2d0bcda7.0024f3c0.js.map