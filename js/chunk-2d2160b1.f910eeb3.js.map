{"version":3,"sources":["webpack:///./src/blocks/python/random/generators.ts"],"names":["define","Python","block","value_text","Blockly","valueToCode","ORDER_ATOMIC","code"],"mappings":"gHAAc,SAAUA,EAAOC,GAE7BA,EAAO,iBAAmB,SAAUC,GAClC,IAAIC,EAAaC,QAAQH,OAAOI,YAAYH,EAAO,OAAQE,QAAQH,OAAOK,cAEtEC,EAAO,iBAAmBJ,EAAa,IAE3C,MAAO,CAACI,EAAMH,QAAQH,OAAOK,eAG/BL,EAAO,kBAAoB,SAAUC,GACnC,IAAIC,EAAaC,QAAQH,OAAOI,YAAYH,EAAO,OAAQE,QAAQH,OAAOK,cAEtEC,EAAO,kBAAoBJ,EAAa,IAE5C,MAAO,CAACI,EAAMH,QAAQH,OAAOK,eAG/BL,EAAO,kBAAoB,SAAUC,GACnC,IAAIC,EAAaC,QAAQH,OAAOI,YAAYH,EAAO,OAAQE,QAAQH,OAAOK,cAEtEC,EAAO,kBAAoBJ,EAAa,IAE5C,MAAO,CAACI,EAAMH,QAAQH,OAAOK,eAG/BL,EAAO,iBAAmB,SAASC,GACjC,IAAIC,EAAaC,QAAQH,OAAOI,YAAYH,EAAO,OAAQE,QAAQH,OAAOK,cAEtEC,EAAO,iBAAkBJ,EAAY,IAEzC,MAAO,CAACI,EAAMH,QAAQH,OAAOK,eAG/BL,EAAO,oBAAsB,SAASC,GACpC,IAAIC,EAAaC,QAAQH,OAAOI,YAAYH,EAAO,OAAQE,QAAQH,OAAOK,cAEtEC,EAAO,oBAAqBJ,EAAY,IAE5C,MAAO,CAACI,EAAMH,QAAQH,OAAOK,eAG/BL,EAAO,eAAiB,SAASC,GAC/B,IAAIC,EAAaC,QAAQH,OAAOI,YAAYH,EAAO,OAAQE,QAAQH,OAAOK,cAEtEC,EAAO,eAAgBJ,EAAY,IAEvC,MAAO,CAACI,EAAMH,QAAQH,OAAOK,eAG/BL,EAAO,kBAAoB,SAASC,GAClC,IAAIC,EAAaC,QAAQH,OAAOI,YAAYH,EAAO,OAAQE,QAAQH,OAAOK,cAEtEC,EAAO,kBAAmBJ,EAAY,IAE1C,MAAO,CAACI,EAAMH,QAAQH,OAAOK,eAvDjC","file":"js/chunk-2d2160b1.f910eeb3.js","sourcesContent":["export default function define(Python: Blockly.BlockGenerators) {\n\n  Python['random_choice'] = function (block) {\n    var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = 'random.choice(' + value_text + ')';\n    // TODO: Change ORDER_NONE to the correct strength.\n    return [code, Blockly.Python.ORDER_ATOMIC];\n  };\n\n  Python['random_randint'] = function (block) {\n    var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = 'random.randint(' + value_text + ')';\n    // TODO: Change ORDER_NONE to the correct strength.\n    return [code, Blockly.Python.ORDER_ATOMIC];\n  };\n\n  Python['random_uniform'] = function (block) {\n    var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = 'random.uniform(' + value_text + ')';\n    // TODO: Change ORDER_NONE to the correct strength.\n    return [code, Blockly.Python.ORDER_ATOMIC];\n  };\n \n  Python['random_random'] = function(block) {\n    var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = 'random.random(' +value_text+ ')';\n    // TODO: Change ORDER_NONE to the correct strength.\n    return [code, Blockly.Python.ORDER_ATOMIC];\n  };\n\n  Python['random_randrange'] = function(block) {\n    var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = 'random.randrange(' +value_text+ ')';\n    // TODO: Change ORDER_NONE to the correct strength.\n    return [code, Blockly.Python.ORDER_ATOMIC];\n  };\n\n  Python['random_seed'] = function(block) {\n    var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = 'random.seed(' +value_text+ ')';\n    // TODO: Change ORDER_NONE to the correct strength.\n    return [code, Blockly.Python.ORDER_ATOMIC];\n  };\n\n  Python['random_shuffle'] = function(block) {\n    var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = 'random.shuffle(' +value_text+ ')';\n    // TODO: Change ORDER_NONE to the correct strength.\n    return [code, Blockly.Python.ORDER_ATOMIC];\n  };\n\n}\n"],"sourceRoot":""}