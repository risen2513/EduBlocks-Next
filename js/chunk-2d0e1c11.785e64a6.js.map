{"version":3,"sources":["webpack:///./src/blocks/microbit/accelerometer/generators.ts"],"names":["define","Python","block","text_gesture1","Blockly","valueToCode","ORDER_ATOMIC","code","getFieldValue","text_gesture2","text_gesture","text_axis"],"mappings":"kHAAc,SAAUA,EAAOC,GAE7BA,EAAO,mBAAqB,SAAUC,GACpC,IAAIC,EAAgBC,QAAQH,OAAOI,YAAYH,EAAO,OAAQE,QAAQH,OAAOK,eACxE,UACL,MAAMC,EAAO,4BAA8BJ,EAAgB,IAC3D,MAAO,CAACI,EAAMH,QAAQH,OAAOK,eAG/BL,EAAO,gBAAkB,SAAUC,GACjC,MAAMC,EAAgBD,EAAMM,cAAc,YACpCD,EAAO,4BAA8BJ,EAAgB,IAC3D,MAAO,CAACI,EAAMH,QAAQH,OAAOK,eAG/BL,EAAO,oBAAsB,SAAUC,GACrC,IAAIO,EAAgBL,QAAQH,OAAOI,YAAYH,EAAO,OAAQE,QAAQH,OAAOK,eACxE,UACL,MAAMC,EAAO,6BAA+BE,EAAgB,IAC5D,MAAO,CAACF,EAAMH,QAAQH,OAAOK,eAG/BL,EAAO,iBAAmB,SAAUC,GAClC,MAAMO,EAAgBP,EAAMM,cAAc,YACpCD,EAAO,6BAA+BE,EAAgB,IAC5D,MAAO,CAACF,EAAMH,QAAQH,OAAOK,eAG/BL,EAAO,eAAiB,SAAUC,GAChC,MAAMQ,EAAeR,EAAMM,cAAc,YACzC,MAAO,CAACE,EAAcN,QAAQH,OAAOK,eAGvCL,EAAO,qBAAuB,SAAUC,GACtC,MAAMK,EAAO,kCACb,MAAO,CAACA,EAAMH,QAAQH,OAAOK,eAG/BL,EAAO,UAAY,SAAUC,GAC3B,MAAMS,EAAYT,EAAMM,cAAc,QAChCD,EAAO,iBAAmBI,EAChC,MAAO,CAACJ,EAAMH,QAAQH,OAAOK,eAzCjC","file":"js/chunk-2d0e1c11.785e64a6.js","sourcesContent":["export default function define(Python: Blockly.BlockGenerators) {\n\n  Python['accisgesturenew'] = function (block) {\n    let text_gesture1 = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)\n      || '\\'shake\\'';\n    const code = 'accelerometer.is_gesture(' + text_gesture1 + ')';\n    return [code, Blockly.Python.ORDER_ATOMIC];\n  };\n\n  Python['accisgesture'] = function (block) {\n    const text_gesture1 = block.getFieldValue('gesture1');\n    const code = 'accelerometer.is_gesture(' + text_gesture1 + ')';\n    return [code, Blockly.Python.ORDER_ATOMIC];\n  };\n\n  Python['accwasgesturenew'] = function (block) {\n    let text_gesture2 = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)\n      || '\\'shake\\'';\n    const code = 'accelerometer.was_gesture(' + text_gesture2 + ')';\n    return [code, Blockly.Python.ORDER_ATOMIC];\n  };\n\n  Python['accwasgesture'] = function (block) {\n    const text_gesture2 = block.getFieldValue('gesture2');\n    const code = 'accelerometer.was_gesture(' + text_gesture2 + ')';\n    return [code, Blockly.Python.ORDER_ATOMIC];\n  };\n\n  Python['accgestures'] = function (block) {\n    const text_gesture = block.getFieldValue('gestures');\n    return [text_gesture, Blockly.Python.ORDER_ATOMIC];\n  };\n\n  Python['acccurrentgesture'] = function (block) {\n    const code = 'accelerometer.current_gesture()';\n    return [code, Blockly.Python.ORDER_ATOMIC];\n  };\n\n  Python['accget'] = function (block) {\n    const text_axis = block.getFieldValue('axis');\n    const code = 'accelerometer.' + text_axis;\n    return [code, Blockly.Python.ORDER_ATOMIC];\n  };\n}\n"],"sourceRoot":""}