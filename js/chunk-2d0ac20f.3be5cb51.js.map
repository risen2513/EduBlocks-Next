{"version":3,"sources":["webpack:///./src/blocks/circuitpython/audio/definitions.ts"],"names":["define","Blocks","audiocol","init","this","appendDummyInput","appendField","setPreviousStatement","setNextStatement","setColour","setTooltip","setHelpUrl","Blockly","FieldVariable","appendValueInput","setCheck","setInputsInline","setOutput","setOutputShape","OUTPUT_SHAPE_ROUND"],"mappings":"kHAAc,SAAUA,EAAOC,GAC7B,IAAIC,EAAW,UACfD,EAAO,gBAAkB,CACvBE,KAAM,WACJC,KAAKC,mBACFC,YAAY,kBACfF,KAAKG,sBAAqB,EAAM,MAChCH,KAAKI,kBAAiB,EAAM,MAC5BJ,KAAKK,UAAUP,GACfE,KAAKM,WAAW,kCAChBN,KAAKO,WAAW,MAIpBV,EAAO,gBAAkB,CACvBE,KAAM,WACJC,KAAKC,mBACAC,YAAY,IAAIM,QAAQC,cAAc,SAAU,OAChDP,YAAY,sBACjBF,KAAKU,iBAAiB,QACjBC,SAAS,MACdX,KAAKC,mBACAC,YAAY,KACjBF,KAAKG,sBAAqB,EAAM,MAChCH,KAAKI,kBAAiB,EAAM,MAC5BJ,KAAKK,UAAUP,GAClBE,KAAKM,WAAW,IAChBN,KAAKO,WAAW,MAIjBV,EAAO,cAAgB,CACrBE,KAAM,WACJC,KAAKC,mBACAC,YAAY,IAAIM,QAAQC,cAAc,SAAU,OAChDP,YAAY,wBACjBF,KAAKU,iBAAiB,QACjBC,SAAS,MACdX,KAAKC,mBACAC,YAAY,KACjBF,KAAKG,sBAAqB,EAAM,MAChCH,KAAKI,kBAAiB,EAAM,MAC5BJ,KAAKK,UAAUP,GAClBE,KAAKM,WAAW,IAChBN,KAAKO,WAAW,MAIjBV,EAAO,aAAe,CACpBE,KAAM,WACJC,KAAKC,mBACAC,YAAY,IAAIM,QAAQC,cAAc,SAAU,OAChDP,YAAY,wBACjBF,KAAKU,iBAAiB,QACjBC,SAAS,MACdX,KAAKC,mBACAC,YAAY,KACjBF,KAAKG,sBAAqB,EAAM,MAChCH,KAAKI,kBAAiB,EAAM,MAC5BJ,KAAKK,UAAUP,GAClBE,KAAKM,WAAW,IAChBN,KAAKO,WAAW,MAKjBV,EAAO,cAAgB,CACrBE,KAAM,WACJC,KAAKC,mBACAC,YAAY,IAAIM,QAAQC,cAAc,QAAS,QAC/CP,YAAY,YACjBF,KAAKU,iBAAiB,QACjBC,SAAS,MACdX,KAAKC,mBACAC,YAAY,KACjBF,KAAKG,sBAAqB,EAAM,MAChCH,KAAKI,kBAAiB,EAAM,MAC5BJ,KAAKK,UAAUP,GAClBE,KAAKM,WAAW,IAChBN,KAAKO,WAAW,MAKjBV,EAAO,iBAAmB,CACxBE,KAAM,WACJC,KAAKC,mBACAC,YAAY,IAAIM,QAAQC,cAAc,SAAU,OAChDP,YAAY,YACjBF,KAAKY,iBAAgB,GACrBZ,KAAKa,WAAU,EAAM,MACrBb,KAAKc,eAAeN,QAAQO,oBAC5Bf,KAAKK,UAAUP,GAClBE,KAAKM,WAAW,IAChBN,KAAKO,WAAW,MAIjBV,EAAO,aAAe,CACpBE,KAAM,WACJC,KAAKC,mBACAC,YAAY,IAAIM,QAAQC,cAAc,UAAW,OACjDP,YAAY,yBACjBF,KAAKU,iBAAiB,QACjBC,SAAS,MACdX,KAAKC,mBACAC,YAAY,KACjBF,KAAKG,sBAAqB,EAAM,MAChCH,KAAKI,kBAAiB,EAAM,MAC5BJ,KAAKK,UAAUP,GAClBE,KAAKM,WAAW,IAChBN,KAAKO,WAAW,MAIjBV,EAAO,cAAgB,CACrBE,KAAM,WACJC,KAAKC,mBACAC,YAAY,IAAIM,QAAQC,cAAc,SAAU,OAChDP,YAAY,UACjBF,KAAKU,iBAAiB,QACjBC,SAAS,MACdX,KAAKC,mBACAC,YAAY,KACjBF,KAAKG,sBAAqB,EAAM,MAChCH,KAAKI,kBAAiB,EAAM,MAC5BJ,KAAKK,UAAUP,GAClBE,KAAKM,WAAW,IAChBN,KAAKO,WAAW,MAIjBV,EAAO,cAAgB,CACrBE,KAAM,WACJC,KAAKC,mBACAC,YAAY,IAAIM,QAAQC,cAAc,SAAU,OAChDP,YAAY,WACjBF,KAAKG,sBAAqB,EAAM,MAChCH,KAAKI,kBAAiB,EAAM,MAC5BJ,KAAKK,UAAUP,GAClBE,KAAKM,WAAW,IAChBN,KAAKO,WAAW,MA7InB","file":"js/chunk-2d0ac20f.3be5cb51.js","sourcesContent":["export default function define(Blocks: Blockly.BlockDefinitions) {\n  let audiocol = \"#4CE254\"\n  Blocks['import_audio'] = {\n    init: function () {\n      this.appendDummyInput()\n        .appendField('import audioio');\n      this.setPreviousStatement(true, null);\n      this.setNextStatement(true, null);\n      this.setColour(audiocol);\n      this.setTooltip('Imports the DigitalIO library.');\n      this.setHelpUrl('');\n    },\n  };\n\n  Blocks['audio_enable'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(new Blockly.FieldVariable(\"audio\"), \"pin\")\n          .appendField(\".switch_to_output(\")\n      this.appendValueInput(\"text\")\n          .setCheck(null);\n      this.appendDummyInput()\n          .appendField(\")\");\n      this.setPreviousStatement(true, null);\n      this.setNextStatement(true, null);\n      this.setColour(audiocol);\n   this.setTooltip(\"\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\n  Blocks['audio_conf'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(new Blockly.FieldVariable(\"audio\"), \"pin\")\n          .appendField(\" = audioio.AudioOut(\")\n      this.appendValueInput(\"text\")\n          .setCheck(null);\n      this.appendDummyInput()\n          .appendField(\")\");\n      this.setPreviousStatement(true, null);\n      this.setNextStatement(true, null);\n      this.setColour(audiocol);\n   this.setTooltip(\"\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\n  Blocks['audio_wav'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(new Blockly.FieldVariable(\"audio\"), \"pin\")\n          .appendField(\" = audioio.WaveFile(\")\n      this.appendValueInput(\"text\")\n          .setCheck(null);\n      this.appendDummyInput()\n          .appendField(\")\");\n      this.setPreviousStatement(true, null);\n      this.setNextStatement(true, null);\n      this.setColour(audiocol);\n   this.setTooltip(\"\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\n\n  Blocks['audio_open'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(new Blockly.FieldVariable(\"data\"), \"data\")\n          .appendField(\" = open(\")\n      this.appendValueInput(\"text\")\n          .setCheck(null);\n      this.appendDummyInput()\n          .appendField(\")\");\n      this.setPreviousStatement(true, null);\n      this.setNextStatement(true, null);\n      this.setColour(audiocol);\n   this.setTooltip(\"\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\n\n  Blocks['audio_playing'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(new Blockly.FieldVariable(\"audio\"), \"pin\")\n          .appendField(\".playing\");\n      this.setInputsInline(true);\n      this.setOutput(true, null);\n      this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);\n      this.setColour(audiocol);\n   this.setTooltip(\"\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\n  Blocks['audio_raw'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(new Blockly.FieldVariable(\"sample\"), \"pin\")\n          .appendField(\" = audioio.RawSample(\")\n      this.appendValueInput(\"text\")\n          .setCheck(null);\n      this.appendDummyInput()\n          .appendField(\")\");\n      this.setPreviousStatement(true, null);\n      this.setNextStatement(true, null);\n      this.setColour(audiocol);\n   this.setTooltip(\"\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\n  Blocks['audio_play'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(new Blockly.FieldVariable(\"audio\"), \"pin\")\n          .appendField(\".play(\")\n      this.appendValueInput(\"text\")\n          .setCheck(null);\n      this.appendDummyInput()\n          .appendField(\")\");\n      this.setPreviousStatement(true, null);\n      this.setNextStatement(true, null);\n      this.setColour(audiocol);\n   this.setTooltip(\"\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\n  Blocks['audio_stop'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(new Blockly.FieldVariable(\"audio\"), \"pin\")\n          .appendField(\".stop()\");\n      this.setPreviousStatement(true, null);\n      this.setNextStatement(true, null);\n      this.setColour(audiocol);\n   this.setTooltip(\"\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\n\n}"],"sourceRoot":""}