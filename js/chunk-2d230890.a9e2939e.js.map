{"version":3,"sources":["webpack:///./src/blocks/circuitpython/cpx/generators.ts"],"names":["define","Python","block","code","value_text","Blockly","valueToCode","ORDER_ATOMIC","value_name","dropdown_button","getFieldValue","value_text1","value_text2"],"mappings":"gHAAc,SAAUA,EAAOC,GAG7BA,EAAO,cAAgB,SAAUC,GAC/B,MAAMC,EAAO,uDACb,OAAOA,GAGTF,EAAO,UAAY,SAASC,GAC1B,IAAIE,EAAaC,QAAQJ,OAAOK,YAAYJ,EAAO,OAAQG,QAAQJ,OAAOM,cAEtEJ,EAAO,iBAAkBC,EAAY,KACzC,OAAOD,GAGTF,EAAO,UAAY,SAASC,GAE1B,IAAIC,EAAO,aAEX,MAAO,CAACA,EAAME,QAAQJ,OAAOM,eAG/BN,EAAO,eAAiB,SAASC,GAC/B,IAAIM,EAAaH,QAAQJ,OAAOK,YAAYJ,EAAO,OAAQG,QAAQJ,OAAOM,cAEtEJ,EAAO,qBAAsBK,EAAY,KAC7C,OAAOL,GAGTF,EAAO,UAAY,SAASC,GAE1B,IAAIC,EAAO,aAEX,MAAO,CAACA,EAAME,QAAQJ,OAAOM,eAG/BN,EAAO,SAAW,SAASC,GACzB,IAAIE,EAAaC,QAAQJ,OAAOK,YAAYJ,EAAO,OAAQG,QAAQJ,OAAOM,cAEtEJ,EAAO,aAAcC,EAAY,IAErC,MAAO,CAACD,EAAME,QAAQJ,OAAOM,eAG/BN,EAAO,SAAW,SAASC,GAEzB,IAAIC,EAAO,YAEX,MAAO,CAACA,EAAME,QAAQJ,OAAOM,eAG/BN,EAAO,OAAS,SAASC,GAEvB,IAAIC,EAAO,mBAEX,MAAO,CAACA,EAAME,QAAQJ,OAAOM,eAG/BN,EAAO,UAAY,SAASC,GAC1B,IAAIO,EAAkBP,EAAMQ,cAAc,UAEtCP,EAAO,cAAeM,EAE1B,MAAO,CAACN,EAAME,QAAQJ,OAAOM,eAG/BN,EAAO,QAAU,SAASC,GAExB,IAAIC,EAAO,kBAEX,MAAO,CAACA,EAAME,QAAQJ,OAAOM,eAG/BN,EAAO,aAAe,SAASC,GAC7B,IAAIO,EAAkBP,EAAMQ,cAAc,UAEtCP,EAAO,aAAcM,EAEzB,MAAO,CAACN,EAAME,QAAQJ,OAAOM,eAG/BN,EAAO,YAAc,SAASC,GAC5B,IAAIS,EAAcN,QAAQJ,OAAOK,YAAYJ,EAAO,QAASG,QAAQJ,OAAOM,cACxEK,EAAcP,QAAQJ,OAAOK,YAAYJ,EAAO,QAASG,QAAQJ,OAAOM,cAExEJ,EAAO,iBAAkBQ,EAAa,KAAMC,EAAa,MAC7D,OAAOT,GAGTF,EAAO,aAAe,SAASC,GAC7B,IAAIE,EAAaC,QAAQJ,OAAOK,YAAYJ,EAAO,OAAQG,QAAQJ,OAAOM,cAEtEJ,EAAO,kBAAmBC,EAAY,IAE1C,MAAO,CAACD,EAAME,QAAQJ,OAAOM,eAG/BN,EAAO,YAAc,SAASC,GAE5B,IAAIC,EAAO,kBAEX,MAAO,CAACA,EAAME,QAAQJ,OAAOM,eAG/BN,EAAO,YAAc,SAASC,GAC5B,IAAIE,EAAaC,QAAQJ,OAAOK,YAAYJ,EAAO,OAAQG,QAAQJ,OAAOM,cAEtEJ,EAAO,iBAAkBC,EAAY,MACzC,OAAOD,GA5GX","file":"js/chunk-2d230890.a9e2939e.js","sourcesContent":["export default function define(Python: Blockly.BlockGenerators) {\n\n\n  Python['import_cpx'] = function (block) {\n    const code = 'from adafruit_circuitplayground.express import cpx\\n';\n    return code;\n  };\n\n  Python['redled'] = function(block) {\n    var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = 'cpx.red_led = ' +value_text+ '\\n';\n    return code;\n  };\n\n  Python['switch'] = function(block) {\n    // TODO: Assemble Python into code variable.\n    var code = 'cpx.switch';\n    // TODO: Change ORDER_NONE to the correct strength.\n    return [code, Blockly.Python.ORDER_ATOMIC];\n  };\n\n  Python['detect_taps'] = function(block) {\n    var value_name = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = 'cpx.detect_taps = ' +value_name+ '\\n';\n    return code;\n  };\n\n  Python['tapped'] = function(block) {\n    // TODO: Assemble Python into code variable.\n    var code = 'cpx.tapped';\n    // TODO: Change ORDER_NONE to the correct strength.\n    return [code, Blockly.Python.ORDER_ATOMIC];\n  };\n\n  Python['shake'] = function(block) {\n    var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = 'cpx.shake(' +value_text+ ')';\n    // TODO: Change ORDER_NONE to the correct strength.\n    return [code, Blockly.Python.ORDER_ATOMIC];\n  };\n\n  Python['light'] = function(block) {\n    // TODO: Assemble Python into code variable.\n    var code = 'cpx.light';\n    // TODO: Change ORDER_NONE to the correct strength.\n    return [code, Blockly.Python.ORDER_ATOMIC];\n  };\n\n  Python['acc'] = function(block) {\n    // TODO: Assemble Python into code variable.\n    var code = 'cpx.acceleration';\n    // TODO: Change ORDER_NONE to the correct strength.\n    return [code, Blockly.Python.ORDER_ATOMIC];\n  };\n\n  Python['button'] = function(block) {\n    var dropdown_button = block.getFieldValue('button');\n    // TODO: Assemble Python into code variable.\n    var code = 'cpx.button_' +dropdown_button;\n    // TODO: Change ORDER_NONE to the correct strength.\n    return [code, Blockly.Python.ORDER_ATOMIC];\n  };\n\n  Python['temp'] = function(block) {\n    // TODO: Assemble Python into code variable.\n    var code = 'cpx.temperature';\n    // TODO: Change ORDER_NONE to the correct strength.\n    return [code, Blockly.Python.ORDER_ATOMIC];\n  };\n\n  Python['touchdrop'] = function(block) {\n    var dropdown_button = block.getFieldValue('button');\n    // TODO: Assemble Python into code variable.\n    var code = 'cpx.touch_' +dropdown_button;\n    // TODO: Change ORDER_NONE to the correct strength.\n    return [code, Blockly.Python.ORDER_ATOMIC];\n  };\n\n  Python['playtone'] = function(block) {\n    var value_text1 = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);\n    var value_text2 = Blockly.Python.valueToCode(block, 'text2', Blockly.Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = 'cpx.play_tone(' +value_text1+ ', ' +value_text2+ ')\\n';\n    return code;\n  };\n\n  Python['starttone'] = function(block) {\n    var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = 'cpx.start_tone(' +value_text+ ')';\n    // TODO: Change ORDER_NONE to the correct strength.\n    return [code, Blockly.Python.ORDER_ATOMIC];\n  };\n\n  Python['stoptone'] = function(block) {\n    // TODO: Assemble Python into code variable.\n    var code = 'cpx.stop_tone()';\n    // TODO: Change ORDER_NONE to the correct strength.\n    return [code, Blockly.Python.ORDER_ATOMIC];\n  };\n\n  Python['playfile'] = function(block) {\n    var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = 'cpx.play_file(' +value_text+ ')\\n';\n    return code;\n  };\n\n}\n"],"sourceRoot":""}