{"version":3,"sources":["webpack:///./src/blocks/microbit/display/generators.ts"],"names":["define","Python","block","text_message","Blockly","valueToCode","ORDER_ATOMIC","code","getFieldValue","text_image","text_xy","text_setpix","dropdown_name","variableDB_","getName","Variables","NAME_TYPE","number_1","number_2","number_3","number_4","number_5","number_6","number_7","number_8","number_9","number_10","number_11","number_12","number_13","number_14","number_15","number_16","number_17","number_18","number_19","number_20","number_21","number_22","number_23","number_24","number_25","dropdown_expressions"],"mappings":"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","file":"js/chunk-2d2161d6.7feee13d.js","sourcesContent":["export default function define(Python: Blockly.BlockGenerators) {\n\n\n  Python['scrollnew'] = function (block) {\n    var text_message = Blockly.Python.valueToCode(block, 'displaytext', Blockly.Python.ORDER_ATOMIC)\n    || 'True';\n    let code = 'display.scroll(\"' + text_message + '\") \\n';\n    return code; \n  };\n\n  //deprecated\n\n  Python['scroll'] = function (block) {\n    var text_message = Blockly.Python.valueToCode(block, 'displaytext', Blockly.Python.ORDER_ATOMIC)\n    || 'True';\n    let code = 'display.scroll(\"' + text_message + '\") \\n';\n    return code; \n  };\n\n  Python['scrollvar'] = function (block) {\n    let text_message = block.getFieldValue('message');\n    let code = 'display.scroll(' + text_message + ') \\n';\n    return code;\n  };\n\n  Python['scrollvarnew'] = function (block) {\n    var text_message = Blockly.Python.valueToCode(block, 'displaytextvar', Blockly.Python.ORDER_ATOMIC)\n    || '0';\n    let code = 'display.scroll(' + text_message + ') \\n';\n    return code; \n  };\n\n  Python['image'] = function (block) {\n    let text_image = block.getFieldValue('image');\n    let code = 'display.show(' + text_image + ') \\n';\n    return code;\n  };\n\n  Python['imagenew'] = function (block) {\n    var text_message = Blockly.Python.valueToCode(block, 'imagevar', Blockly.Python.ORDER_ATOMIC)\n    || 'Image.HAPPY';\n    let code = 'display.show(' + text_message + ') \\n';\n    return code; \n  };\n\n  Python['getpixel'] = function (block) {\n    let text_xy = block.getFieldValue('xy');\n    let code = 'display.get_pixel(' + text_xy + ') \\n';\n    return code;\n  };\n\n  Python['getpixelnew'] = function (block) {\n    var text_xy = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)\n    || '0';\n    let code = 'display.get_pixel(' + text_xy + ') \\n';\n    return code;\n  };\n\n  Python['setpixel'] = function (block) {\n    let text_setpix = block.getFieldValue('setpix');\n    let code = 'display.set_pixel(' + text_setpix + ') \\n';\n    return code;\n  };\n\n  Python['setpixelnew'] = function (block) {\n    var text_setpix = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)\n    || '0, 0, 5';\n    let code = 'display.set_pixel(' + text_setpix + ') \\n';\n    return code;\n  };\n\n  \n  Python['disclear'] = function (block) {\n    let code = 'display.clear() \\n';\n    return code;\n  };\n  \n\n  Python['disonoff'] = function(block) {\n    var dropdown_name = block.getFieldValue('NAME');\n    // TODO: Assemble Python into code variable.\n    var code = 'display.' +dropdown_name+ '()\\n';\n    return code;\n  };\n\n \n  Python['imagecreate'] = function(block) {\n    var text_image = Blockly.Python.variableDB_.getName(block.getFieldValue('image'), Blockly.Variables.NAME_TYPE);\n    var number_1 = block.getFieldValue('1');\n    var number_2 = block.getFieldValue('2');\n    var number_3 = block.getFieldValue('3');\n    var number_4 = block.getFieldValue('4');\n    var number_5 = block.getFieldValue('5');\n    var number_6 = block.getFieldValue('6');\n    var number_7 = block.getFieldValue('7');\n    var number_8 = block.getFieldValue('8');\n    var number_9 = block.getFieldValue('9');\n    var number_10 = block.getFieldValue('10');\n    var number_11 = block.getFieldValue('11');\n    var number_12 = block.getFieldValue('12');\n    var number_13 = block.getFieldValue('13');\n    var number_14 = block.getFieldValue('14');\n    var number_15 = block.getFieldValue('15');\n    var number_16 = block.getFieldValue('16');\n    var number_17 = block.getFieldValue('17');\n    var number_18 = block.getFieldValue('18');\n    var number_19 = block.getFieldValue('19');\n    var number_20 = block.getFieldValue('20');\n    var number_16 = block.getFieldValue('16');\n    var number_17 = block.getFieldValue('17');\n    var number_18 = block.getFieldValue('18');\n    var number_19 = block.getFieldValue('19');\n    var number_20 = block.getFieldValue('20');\n    var number_21 = block.getFieldValue('21');\n    var number_22 = block.getFieldValue('22');\n    var number_23 = block.getFieldValue('23');\n    var number_24 = block.getFieldValue('24');\n    var number_25 = block.getFieldValue('25');\n    var code = text_image +' = Image(\"'+number_1+number_2+number_3+number_4+number_5+':'+number_6+number_7+number_8+number_9+number_10+':'+number_11+number_12+number_13+number_14+number_15+':'+number_16+number_17+number_18+number_19+number_20+':'+number_21+number_22+number_23+number_24+number_25+'\")\\n';\n    return code;\n  };\n\n  Python['expressions'] = function(block) {\n    var dropdown_expressions = block.getFieldValue('image');\n    var code = dropdown_expressions;\n    return [code, Blockly.Python.ORDER_ATOMIC];\n  };\n  Python['clocks']=Python['expressions'];\n  Python['shapes']=Python['expressions'];\n  Python['animals']=Python['expressions'];\n\n}\n"],"sourceRoot":""}