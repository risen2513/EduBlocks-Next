{"version":3,"sources":["webpack:///./src/blocks/python/variables/generators.ts"],"names":["define","Python","block","variable_var","Blockly","variableDB_","getName","getFieldValue","Variables","NAME_TYPE","code","ORDER_ATOMIC","variable_name","text_text","value_name","valueToCode"],"mappings":"kHAAc,SAAUA,EAAOC,GAG7BA,EAAO,iBAAmB,SAASC,GACjC,IAAIC,EAAeC,QAAQH,OAAOI,YAAYC,QAAQJ,EAAMK,cAAc,OAAQH,QAAQI,UAAUC,WAEhGC,EAAOP,EAEX,MAAO,CAACO,EAAMN,QAAQH,OAAOU,eAG/BV,EAAO,iBAAmB,SAASC,GACjC,IAAIU,EAAgBR,QAAQH,OAAOI,YAAYC,QAAQJ,EAAMK,cAAc,OAAQH,QAAQI,UAAUC,WACjGI,EAAYX,EAAMK,cAAc,QAChCO,EAAaV,QAAQH,OAAOc,YAAYb,EAAO,SAAUE,QAAQH,OAAOU,cAExED,EAAOE,EAAgB,IAAKC,EAAW,IAAKC,EAAY,KAC5D,OAAOJ,GAGTT,EAAO,cAAgB,SAASC,GAC9B,IAAIW,EAAYX,EAAMK,cAAc,QAEhCG,EAAOG,EAEX,MAAO,CAACH,EAAMN,QAAQH,OAAOU,eAzBjC","file":"js/chunk-2d0e95a1.c8e7f10c.js","sourcesContent":["export default function define(Python: Blockly.BlockGenerators) {\n\n\n  Python['variables_get'] = function(block) {\n    var variable_var = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n    // TODO: Assemble Python into code variable.\n    var code = variable_var;\n    // TODO: Change ORDER_NONE to the correct strength.\n    return [code, Blockly.Python.ORDER_ATOMIC];\n  };\n\n  Python['variables_set'] = function(block) {\n    var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n    var text_text = block.getFieldValue('NAME');\n    var value_name = Blockly.Python.valueToCode(block, 'varset', Blockly.Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = variable_name + ' ' +text_text+ ' ' +value_name+ '\\n';\n    return code;\n  };\n\n  Python['textinline'] = function(block) {\n    var text_text = block.getFieldValue('text');\n    // TODO: Assemble Python into code variable.\n    var code = text_text;\n    // TODO: Change ORDER_NONE to the correct strength.\n    return [code, Blockly.Python.ORDER_ATOMIC];\n  };\n\n}\n"],"sourceRoot":""}