{"version":3,"sources":["webpack:///./src/blocks/microbit/music/generators.ts"],"names":["define","Python","block","text_musicplay","Blockly","valueToCode","ORDER_ATOMIC","code","dropdown_songs","getFieldValue","value_pin","text_musicpitch","text_musicstop","text_musictempo"],"mappings":"kHAAc,SAAUA,EAAOC,GAE7BA,EAAO,aAAe,SAAUC,GAC9B,IAAIC,EAAiBC,QAAQH,OAAOI,YAAYH,EAAO,OAAQE,QAAQH,OAAOK,eAC3E,GACH,IAAIC,EAAO,cAAgBJ,EAAiB,OAC5C,OAAOI,GAGTN,EAAO,SAAW,SAASC,GACzB,IAAIM,EAAiBN,EAAMO,cAAc,SACrCF,EAAOC,EACX,MAAO,CAACD,EAAMH,QAAQH,OAAOK,eAG/BL,EAAO,eAAiB,SAAUC,GAChC,IAAIK,EAAO,iBACX,OAAOA,GAGTN,EAAO,aAAe,SAASC,GAC7B,IAAIQ,EAAYN,QAAQH,OAAOI,YAAYH,EAAO,MAAOE,QAAQH,OAAOK,cAEpEC,EAAO,SAAWG,EAEtB,MAAO,CAACH,EAAMH,QAAQH,OAAOK,eAG/BL,EAAO,cAAgB,SAAUC,GAC/B,IAAIS,EAAkBP,QAAQH,OAAOI,YAAYH,EAAO,OAAQE,QAAQH,OAAOK,eAC5E,GACH,IAAIC,EAAO,eAAiBI,EAAkB,OAC9C,OAAOJ,GAGTN,EAAO,cAAgB,SAASC,GAE9B,MAAMK,EAAO,kBACb,OAAOA,GAGTN,EAAO,aAAe,SAASC,GAE7B,MAAMK,EAAO,iBACb,OAAOA,GAGTN,EAAO,aAAe,SAAUC,GAC9B,IAAIU,EAAiBR,QAAQH,OAAOI,YAAYH,EAAO,OAAQE,QAAQH,OAAOK,eAC3E,GACH,IAAIC,EAAO,cAAgBK,EAAiB,OAC5C,OAAOL,GAGTN,EAAO,cAAgB,SAAUC,GAC/B,IAAIW,EAAkBT,QAAQH,OAAOI,YAAYH,EAAO,OAAQE,QAAQH,OAAOK,eAC5E,GACH,IAAIC,EAAO,mBAAqBM,EAAkB,OAClD,OAAON,GAGTN,EAAO,iBAAmB,SAAUC,GAClC,MAAMK,EAAO,oBACb,MAAO,CAACA,EAAMH,QAAQH,OAAOK,eA/DjC","file":"js/chunk-2d0b6945.cb24d62f.js","sourcesContent":["export default function define(Python: Blockly.BlockGenerators) {\n\n  Python['musicplay'] = function (block) {\n    var text_musicplay = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)\n    || '';\n    let code = 'music.play(' + text_musicplay + ') \\n';\n    return code;\n  };\n\n  Python['songs'] = function(block) {\n    var dropdown_songs = block.getFieldValue('songs');\n    var code = dropdown_songs;\n    return [code, Blockly.Python.ORDER_ATOMIC];\n  };\n\n  Python['musicimport'] = function (block) {\n    let code = 'import music\\n';\n    return code;\n  };\n\n  Python['music_pin'] = function(block) {\n    var value_pin = Blockly.Python.valueToCode(block, 'pin', Blockly.Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = 'pin = ' + value_pin;\n    // TODO: Change ORDER_NONE to the correct strength.\n    return [code, Blockly.Python.ORDER_ATOMIC];\n  };\n\n  Python['musicpitch'] = function (block) {\n    var text_musicpitch = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)\n    || '';\n    let code = 'music.pitch(' + text_musicpitch + ') \\n';\n    return code;\n  };\n\n  Python['musicreset'] = function(block) {\n    // TODO: Assemble Python into code variable.\n    const code = 'music.reset()\\n';\n    return code;\n  };\n\n  Python['musicstop'] = function(block) {\n    // TODO: Assemble Python into code variable.\n    const code = 'music.stop()\\n';\n    return code;\n  };\n\n  Python['musicstop'] = function (block) {\n    var text_musicstop = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)\n    || '';\n    let code = 'music.stop(' + text_musicstop + ') \\n';\n    return code;\n  };\n\n  Python['musictempo'] = function (block) {\n    var text_musictempo = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)\n    || '';\n    let code = 'music.set_tempo(' + text_musictempo + ') \\n';\n    return code;\n  };\n\n  Python['musicgettempo'] = function (block) {\n    const code = 'music.get_tempo()';\n    return [code, Blockly.Python.ORDER_ATOMIC];\n  };\n}\n"],"sourceRoot":""}