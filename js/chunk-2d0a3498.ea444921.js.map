{"version":3,"sources":["webpack:///./src/blocks/microbit/microphone/definitions.ts"],"names":["define","Blocks","init","this","appendDummyInput","appendField","setOutputShape","Blockly","OUTPUT_SHAPE_ROUND","setOutput","setColour","setTooltip","setHelpUrl","FieldDropdown","appendValueInput","setCheck","setInputsInline"],"mappings":"kHAAc,SAAUA,EAAOC,GAE7BA,EAAO,sBAAwB,CAC7BC,KAAM,WACJC,KAAKC,mBACFC,YAAY,8BACfF,KAAKG,eAAeC,QAAQC,oBAC5BL,KAAKM,WAAU,EAAM,MACrBN,KAAKO,UAAU,WACfP,KAAKQ,WAAW,gCAChBR,KAAKS,WAAW,MAIpBX,EAAO,oBAAsB,CAC3BC,KAAM,WACJC,KAAKC,mBACAC,YAAY,eACZA,YAAY,IAAIE,QAAQM,cAAc,CAAC,CAAC,OAAO,QAAS,CAAC,QAAQ,WAAY,SAClFV,KAAKM,WAAU,EAAM,MACrBN,KAAKG,eAAeC,QAAQC,oBAC5BL,KAAKO,UAAU,WACfP,KAAKQ,WAAW,0CAChBR,KAAKS,WAAW,MAIpBX,EAAO,oBAAsB,CAC3BC,KAAM,WACJC,KAAKC,mBACAC,YAAY,4BACjBF,KAAKM,WAAU,EAAM,MACrBN,KAAKG,eAAeC,QAAQC,oBAC5BL,KAAKO,UAAU,WACfP,KAAKQ,WAAW,0CAChBR,KAAKS,WAAW,MAIpBX,EAAO,uBAAyB,CAC9BC,KAAM,WACJC,KAAKC,mBACAC,YAAY,yBACjBF,KAAKW,iBAAiB,SACjBC,SAAS,MACdZ,KAAKC,mBACAC,YAAY,KACjBF,KAAKa,iBAAgB,GACrBb,KAAKM,WAAU,EAAM,MACrBN,KAAKO,UAAU,WAClBP,KAAKQ,WAAW,2EAChBR,KAAKS,WAAW,MAIjBX,EAAO,wBAA0B,CAC/BC,KAAM,WACJC,KAAKC,mBACFC,YAAY,2BACfF,KAAKG,eAAeC,QAAQC,oBAC5BL,KAAKM,WAAU,EAAM,MACrBN,KAAKO,UAAU,WACfP,KAAKQ,WAAW,yDAChBR,KAAKS,WAAW,MA/DtB","file":"js/chunk-2d0a3498.ea444921.js","sourcesContent":["export default function define(Blocks: Blockly.BlockDefinitions) {\n\n  Blocks['microphone_current'] = {\n    init: function () {\n      this.appendDummyInput()\n        .appendField('microphone.current_sound()');\n      this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);\n      this.setOutput(true, null);\n      this.setColour('#008080');\n      this.setTooltip('Get current sound loud/quiet');\n      this.setHelpUrl('');\n    },\n  };\n\n  Blocks['microphone_level'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(\"microphone.\")\n          .appendField(new Blockly.FieldDropdown([[\"LOUD\",\"LOUD\"], [\"QUIET\",\"QUIET\"]]), \"level\");\n      this.setOutput(true, null);\n      this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);\n      this.setColour('#008080');\n      this.setTooltip(\"Reference the onboard microphone level\");\n      this.setHelpUrl(\"\");\n    }\n  };\n\n  Blocks['microphone_sound'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(\"microphone.sound_level()\")\n      this.setOutput(true, null);\n      this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);\n      this.setColour('#008080');\n      this.setTooltip(\"Reference the onboard microphone level\");\n      this.setHelpUrl(\"\");\n    }\n  };\n\n  Blocks['microphone_wassound'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(\"microphone.was_sound(\");\n      this.appendValueInput(\"level\")\n          .setCheck(null);\n      this.appendDummyInput()\n          .appendField(\")\");\n      this.setInputsInline(true);\n      this.setOutput(true, null);\n      this.setColour('#008080');\n   this.setTooltip(\"Check if a loud/quiet sound occurred since the last call to was_sound()\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\n  Blocks['microphone_getsounds'] = {\n    init: function () {\n      this.appendDummyInput()\n        .appendField('microphone.get_sounds()');\n      this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);\n      this.setOutput(true, null);\n      this.setColour('#008080');\n      this.setTooltip('Get history of sounds since last call to get_sounds()');\n      this.setHelpUrl('');\n    },\n  };\n\n}"],"sourceRoot":""}