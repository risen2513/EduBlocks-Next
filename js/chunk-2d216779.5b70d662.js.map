{"version":3,"sources":["webpack:///./src/blocks/python/definitions/definitions.ts"],"names":["define","Blocks","init","this","appendDummyInput","appendField","appendValueInput","setCheck","appendStatementInput","setPreviousStatement","setNextStatement","setColour","setTooltip","setHelpUrl","setOutput","setOutputShape","Blockly","OUTPUT_SHAPE_ROUND","FieldVariable","FieldDropdown","setInputsInline"],"mappings":"gHAAc,SAAUA,EAAOC,GAE7BA,EAAO,aAAe,CACpBC,KAAM,WACJC,KAAKC,mBACFC,YAAY,QACfF,KAAKG,iBAAiB,KACnBC,SAAS,MACZJ,KAAKC,mBACFC,YAAY,KACfF,KAAKG,iBAAiB,KACnBC,SAAS,MACZJ,KAAKC,mBACFC,YAAY,MACfF,KAAKK,qBAAqB,MACvBD,SAAS,MACZJ,KAAKM,sBAAqB,EAAM,MAChCN,KAAKO,kBAAiB,EAAM,MAC5BP,KAAKQ,UAAU,WACfR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIpBZ,EAAO,cAAgB,CACrBC,KAAM,WACJC,KAAKG,iBAAiB,OACjBC,SAAS,MACdJ,KAAKC,mBACAC,YAAY,KACjBF,KAAKG,iBAAiB,SACjBC,SAAS,MACdJ,KAAKC,mBACAC,YAAY,KACjBF,KAAKW,WAAU,EAAM,MACrBX,KAAKQ,UAAU,WAClBR,KAAKS,WAAW,IAChBT,KAAKY,eAAeC,QAAQC,oBAC5Bd,KAAKU,WAAW,MAIjBZ,EAAO,QAAU,CACfC,KAAM,WACJC,KAAKC,mBACFC,YAAY,SACZA,YAAY,IAAIW,QAAQE,cAAc,IAAK,OAC3Cb,YAAY,IAAIW,QAAQG,cAAc,CAAC,CAAC,IAAK,KAAM,CAAC,KAAM,MAAO,CAAC,KAAM,QAAS,QACpFhB,KAAKG,iBAAiB,UACnBC,SAAS,MACZJ,KAAKiB,iBAAgB,GACrBjB,KAAKM,sBAAqB,EAAM,MAChCN,KAAKO,kBAAiB,EAAM,MAC5BP,KAAKQ,UAAU,WACfR,KAAKS,WAAW,sDAChBT,KAAKU,WAAW,MAIpBZ,EAAO,cAAgB,CACrBC,KAAM,WACJC,KAAKC,mBACFC,YAAY,UACfF,KAAKG,iBAAiB,UACnBC,SAAS,MACZJ,KAAKM,sBAAqB,EAAM,MAChCN,KAAKiB,iBAAgB,GACrBjB,KAAKQ,UAAU,WACfR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIpBZ,EAAO,YAAc,CACnBC,KAAM,WACJC,KAAKC,mBACFC,YAAY,SACfF,KAAKG,iBAAiB,SACnBC,SAAS,MACZJ,KAAKC,mBACFC,YAAY,KACfF,KAAKK,qBAAqB,MACvBH,YAAY,IACfF,KAAKM,sBAAqB,EAAM,MAChCN,KAAKO,kBAAiB,EAAM,MAC5BP,KAAKQ,UAAU,WACfR,KAAKS,WAAW,oBAChBT,KAAKU,WAAW,MAvFtB","file":"js/chunk-2d216779.5b70d662.js","sourcesContent":["export default function define(Blocks: Blockly.BlockDefinitions) {\n\n  Blocks['webdefine'] = {\n    init: function () {\n      this.appendDummyInput()\n        .appendField('def ');\n      this.appendValueInput('1')\n        .setCheck(null);\n      this.appendDummyInput()\n        .appendField('(');\n      this.appendValueInput('2')\n        .setCheck(null);\n      this.appendDummyInput()\n        .appendField('):');\n      this.appendStatementInput('DO')\n        .setCheck(null);\n      this.setPreviousStatement(true, null);\n      this.setNextStatement(true, null);\n      this.setColour(\"#CDDA36\");\n      this.setTooltip('');\n      this.setHelpUrl('');\n    },\n  };\n\n  Blocks['inline_def'] = {\n    init: function() {\n      this.appendValueInput(\"def\")\n          .setCheck(null);\n      this.appendDummyInput()\n          .appendField(\"(\");\n      this.appendValueInput(\"input\")\n          .setCheck(null);\n      this.appendDummyInput()\n          .appendField(\")\");\n      this.setOutput(true, null);\n      this.setColour(\"#CDDA36\");\n   this.setTooltip(\"\");\n   this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND)\n   this.setHelpUrl(\"\");\n    }\n  };\n\n  Blocks['self'] = {\n    init: function() {\n      this.appendDummyInput()\n        .appendField('self.')\n        .appendField(new Blockly.FieldVariable(\"\"), \"VAR\")\n        .appendField(new Blockly.FieldDropdown([['=', '='], ['+=', '+='], [\"-=\", \"-=\"]]), 'NAME')\n      this.appendValueInput(\"varset\")\n        .setCheck(null);\n      this.setInputsInline(true);\n      this.setPreviousStatement(true, null);\n      this.setNextStatement(true, null);\n      this.setColour(\"#CDDA36\");\n      this.setTooltip(\"assign a value, increment, or decrement a variable\");\n      this.setHelpUrl(\"\");\n    }\n  };\n\n  Blocks['webreturn2'] = {\n    init: function () {\n      this.appendDummyInput()\n        .appendField('return');\n      this.appendValueInput('return')\n        .setCheck(null);\n      this.setPreviousStatement(true, null);\n      this.setInputsInline(true);\n      this.setColour(\"#CDDA36\");\n      this.setTooltip('');\n      this.setHelpUrl('');\n    },\n  };\n\n  Blocks['webclass'] = {\n    init: function () {\n      this.appendDummyInput()\n        .appendField('class')\n      this.appendValueInput(\"class\")\n        .setCheck(null)\n      this.appendDummyInput()\n        .appendField(':');\n      this.appendStatementInput('DO')\n        .appendField('');\n      this.setPreviousStatement(true, null);\n      this.setNextStatement(true, null);\n      this.setColour(\"#CDDA36\");\n      this.setTooltip('Class Statement.');\n      this.setHelpUrl('');\n    },\n  };\n\n}\n\n"],"sourceRoot":""}