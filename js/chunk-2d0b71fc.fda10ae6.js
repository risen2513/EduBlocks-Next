(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0b71fc"],{"1fa2":function(o,t,n){"use strict";function l(o){o["events_start_here"]=function(o){const t="# Start Code Here\n";return t},o["import_mltext"]=function(o){const t="from mltext import *\n";return t},o["import_mlmodel"]=function(o){const t="from mlmodel import *\n";return t},o["import_mlimages"]=function(o){const t="from mlimages import *\n";return t},o["import_imagedata"]=function(o){const t="from imagedata import *\n";return t},o["import_time"]=function(o){const t="import time\n";return t},o["import_signal"]=function(o){const t="from signal import pause\n";return t},o["import_pygal"]=function(o){const t="import pygal\n";return t},o["import_processing"]=function(o){const t="from processing import *\n";return t},o["pause_s"]=function(o){const t="pause()\n";return t},o["random"]=function(o){const t="import random\n";return t},o["while_true"]=function(o){let t=Blockly.Python.statementToCode(o,"DO");return t=Blockly.Python.addLoopTrap(t,o.id)||Blockly.Python.PASS,"while True:\n"+t},o["pass"]=function(o){const t="pass \n";return t},o["if"]=function(o){const t=o.getFieldValue("var");let n=Blockly.Python.statementToCode(o,"DO");return n=Blockly.Python.addLoopTrap(n,o.id)||Blockly.Python.PASS,"if "+t+":\n"+n},o["class"]=function(o){const t=Blockly.Python.valueToCode(o,"class",Blockly.Python.ORDER_ATOMIC);let n=Blockly.Python.statementToCode(o,"DO");return n=Blockly.Python.addLoopTrap(n,o.id)||Blockly.Python.PASS,"class "+t+":\n"+n},o["varprint"]=function(o){const t=Blockly.Python.valueToCode(o,"var",Blockly.Python.ORDER_ATOMIC),n="print("+t+")\n";return n},o["ifcroc"]=function(o){let t=Blockly.Python.statementToCode(o,"DO");t=Blockly.Python.addLoopTrap(t,o.id)||Blockly.Python.PASS;const n=o.getFieldValue("this"),l=o.getFieldValue("crocsigns"),e=o.getFieldValue("that"),r="if "+n+" "+l+" "+e+":\n"+t;return r},o["varminus"]=function(o){const t=o.getFieldValue("1"),n=o.getFieldValue("2"),l=t+" -= "+n+"\n";return l},o["for"]=function(o){let t=Blockly.Python.statementToCode(o,"DO");t=Blockly.Python.addLoopTrap(t,o.id)||Blockly.Python.PASS;const n=Blockly.Python.valueToCode(o,"letter",Blockly.Python.ORDER_ATOMIC),l=Blockly.Python.valueToCode(o,"no",Blockly.Python.ORDER_ATOMIC),e="for "+n+" in range("+l+"):\n"+t;return e},o["advancedforloops"]=function(o){let t=Blockly.Python.statementToCode(o,"DO");t=Blockly.Python.addLoopTrap(t,o.id)||Blockly.Python.PASS;const n=Blockly.Python.valueToCode(o,"x",Blockly.Python.ORDER_ATOMIC),l=Blockly.Python.valueToCode(o,"y",Blockly.Python.ORDER_ATOMIC),e="for "+n+" in "+l+":\n"+t;return e},o["ifequals"]=function(o){let t=Blockly.Python.statementToCode(o,"DO");t=Blockly.Python.addLoopTrap(t,o.id)||Blockly.Python.PASS;const n=o.getFieldValue("this"),l=o.getFieldValue("that"),e="if "+n+" == "+l+":\n"+t;return e},o["importinputs"]=function(o){const t="import inputs\n";return t},o["return2"]=function(o){const t=Blockly.Python.valueToCode(o,"return",Blockly.Python.ORDER_ATOMIC),n="return "+t+"\n";return n},o["elif"]=function(o){const t=o.getFieldValue("var");let n=Blockly.Python.statementToCode(o,"DO");return n=Blockly.Python.addLoopTrap(n,o.id)||Blockly.Python.PASS,"elif "+t+":\n"+n},o["else"]=function(o){let t=Blockly.Python.statementToCode(o,"DO");return t=Blockly.Python.addLoopTrap(t,o.id)||Blockly.Python.PASS,"else:\n"+t},o["df"]=function(o){const t=Blockly.Python.valueToCode(o,"def",Blockly.Python.ORDER_ATOMIC),n=Blockly.Python.valueToCode(o,"params",Blockly.Python.ORDER_ATOMIC),l=t+"("+n+")\n";return l},o["whileout"]=function(o){var t=Blockly.Python.valueToCode(o,"cond",Blockly.Python.ORDER_ATOMIC);let n=Blockly.Python.statementToCode(o,"DO");n=Blockly.Python.addLoopTrap(n,o.id)||Blockly.Python.PASS;const l="while "+t+":\n"+n;return l},o["time"]=function(o){const t="import time\n";return t},o["import_math"]=function(o){const t="import math\n";return t},o["import_audio"]=function(o){const t="import audio\n";return t},o["sleep"]=function(o){const t=o.getFieldValue("sleep"),n="sleep("+t+")\n";return n},o["print"]=function(o){const t=Blockly.Python.valueToCode(o,"print",Blockly.Python.ORDER_ATOMIC),n='print("'+t+'")\n';return n},o["sleepnew"]=function(o){var t=Blockly.Python.valueToCode(o,"sleep",Blockly.Python.ORDER_ATOMIC),n="time.sleep("+t+")\n";return n},o["printnew"]=function(o){var t=Blockly.Python.valueToCode(o,"text",Blockly.Python.ORDER_ATOMIC)||"Hello World";const n='print("'+t+'")\n';return n},o["equalsblocknew"]=function(o){var t=Blockly.Python.valueToCode(o,"text1",Blockly.Python.ORDER_ATOMIC),n=Blockly.Python.valueToCode(o,"text2",Blockly.Python.ORDER_ATOMIC),l=t+" = "+n+"\n";return l},o["define"]=function(o){const t=Blockly.Python.valueToCode(o,"1",Blockly.Python.ORDER_ATOMIC),n=Blockly.Python.valueToCode(o,"2",Blockly.Python.ORDER_ATOMIC);let l=Blockly.Python.statementToCode(o,"DO");l=Blockly.Python.addLoopTrap(l,o.id)||Blockly.Python.PASS;const e="def "+t+"("+n+"):\n"+l;return e},o["greater"]=function(o){const t=o.getFieldValue("1"),n=o.getFieldValue("v");let l=Blockly.Python.statementToCode(o,"DO");l=Blockly.Python.addLoopTrap(l,o.id)||Blockly.Python.PASS;const e="while "+t+" > "+n+":\n"+l;return e},o["buttonapressed"]=function(o){const t=o.getFieldValue("NAME"),n="button_"+t+".is_pressed()";return[n,Blockly.Python.ORDER_ATOMIC]},o["ifinline"]=function(o){let t=Blockly.Python.statementToCode(o,"ifstate");t=Blockly.Python.addLoopTrap(t,o.id)||Blockly.Python.PASS;const n=Blockly.Python.valueToCode(o,"iftext",Blockly.Python.ORDER_ATOMIC),l="if "+n+":\n"+t;return l},o["typeanything"]=function(o){var t=Blockly.Python.valueToCode(o,"stuff",Blockly.Python.ORDER_ATOMIC),n=t+"# your own code\n";return n},o["elifinline"]=function(o){let t=Blockly.Python.statementToCode(o,"ifstate");t=Blockly.Python.addLoopTrap(t,o.id)||Blockly.Python.PASS;const n=Blockly.Python.valueToCode(o,"iftext",Blockly.Python.ORDER_ATOMIC),l="elif "+n+":\n"+t;return l},o["internal"]=function(o){var t=Blockly.Python.valueToCode(o,"first",Blockly.Python.ORDER_ATOMIC),n=o.getFieldValue("choose"),l=Blockly.Python.valueToCode(o,"last",Blockly.Python.ORDER_ATOMIC),e=t+" "+n+" "+l;return[e,Blockly.Python.ORDER_ATOMIC]},o["andor"]=o["internal"],o["not"]=function(o){var t=Blockly.Python.valueToCode(o,"bool",Blockly.Python.ORDER_ATOMIC);const n="not "+t;return[n,Blockly.Python.ORDER_ATOMIC]},o["break"]=function(o){const t="break\n ";return t},o["textinline"]=function(o){var t=o.getFieldValue("text"),n=t;return[n,Blockly.Python.ORDER_ATOMIC]},o["stringinline"]=function(o){var t=o.getFieldValue("text"),n='"'+t+'"';return[n,Blockly.Python.ORDER_ATOMIC]},o["sliderinline"]=function(o){var t=o.getFieldValue("slider"),n=t;return[n,Blockly.Python.ORDER_ATOMIC]},o["varinlines"]=function(o){var t=Blockly.Python.variableDB_.getName(o.getFieldValue("var"),Blockly.Variables.NAME_TYPE),n=o.getFieldValue("NAME"),l=Blockly.Python.valueToCode(o,"value",Blockly.Python.ORDER_ATOMIC),e=t+" "+n+" "+l+"\n";return e},o["boolstatus"]=function(o){var t=o.getFieldValue("bool"),n=t;return[n,Blockly.Python.ORDER_ATOMIC]}}n.r(t),n.d(t,"default",(function(){return l}))}}]);
//# sourceMappingURL=chunk-2d0b71fc.fda10ae6.js.map