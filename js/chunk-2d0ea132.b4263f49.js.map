{"version":3,"sources":["webpack:///./src/blocks/microbit/accelerometer/definitions.ts"],"names":["define","Blocks","init","this","appendDummyInput","appendField","appendValueInput","setCheck","setInputsInline","setOutputShape","Blockly","OUTPUT_SHAPE_ROUND","setOutput","setColour","setTooltip","setHelpUrl","FieldTextInput","gesture_dropdown","FieldDropdown"],"mappings":"kHAAc,SAAUA,EAAOC,GAE7BA,EAAO,mBAAqB,CAC1BC,KAAM,WACJC,KAAKC,mBACAC,YAAY,6BACjBF,KAAKG,iBAAiB,QACjBC,SAAS,MACdJ,KAAKC,mBACAC,YAAY,KACjBF,KAAKK,iBAAgB,GACrBL,KAAKM,eAAeC,QAAQC,oBAC5BR,KAAKS,WAAU,EAAM,MACrBT,KAAKU,UAAU,UAAU,UAAU,WACtCV,KAAKW,WAAW,IAChBX,KAAKY,WAAW,MAIjBd,EAAO,gBAAkB,CACvBC,KAAM,WACJC,KAAKC,mBACFC,YAAY,6BACZA,YAAY,IAAIK,QAAQM,eAAe,IAAK,YAC5CX,YAAY,KACfF,KAAKK,iBAAgB,GACrBL,KAAKS,WAAU,EAAM,MACrBT,KAAKM,eAAeC,QAAQC,oBAC5BR,KAAKU,UAAU,UAAU,UAAU,WACnCV,KAAKW,WAAW,wCAChBX,KAAKY,WAAW,MAKpBd,EAAO,oBAAsB,CAC3BC,KAAM,WACJC,KAAKC,mBACAC,YAAY,8BACjBF,KAAKG,iBAAiB,QACjBC,SAAS,MACdJ,KAAKC,mBACAC,YAAY,KACjBF,KAAKK,iBAAgB,GACrBL,KAAKS,WAAU,EAAM,MACrBT,KAAKM,eAAeC,QAAQC,oBAC5BR,KAAKU,UAAU,UAAU,UAAU,WACtCV,KAAKW,WAAW,IAChBX,KAAKY,WAAW,MAIjBd,EAAO,iBAAmB,CACxBC,KAAM,WACJC,KAAKC,mBACFC,YAAY,8BACZA,YAAY,IAAIK,QAAQM,eAAe,IAAK,YAC5CX,YAAY,KACfF,KAAKK,iBAAgB,GACrBL,KAAKS,WAAU,EAAM,MACrBT,KAAKM,eAAeC,QAAQC,oBAC5BR,KAAKU,UAAU,UAAU,UAAU,WACnCV,KAAKW,WAAW,wCAChBX,KAAKY,WAAW,MAItB,IAAIE,EAAmB,CACnB,CAAC,UAAW,WACZ,CAAC,OAAO,QACR,CAAC,SAAS,UACV,CAAC,SAAS,UACV,CAAC,UAAW,WACZ,CAAC,YAAa,aACd,CAAC,cAAe,eAChB,CAAC,aAAc,cACf,CAAC,OAAQ,QACT,CAAC,OAAQ,QACT,CAAC,OAAQ,SAEXhB,EAAO,eAAiB,CACtBC,KAAM,WACJC,KAAKC,mBACAC,YAAY,IAAIK,QAAQQ,cAAcD,GAAmB,YAC9Dd,KAAKS,WAAU,EAAK,UACpBT,KAAKM,eAAeC,QAAQC,oBAC5BR,KAAKU,UAAU,UAAU,UAAU,WACtCV,KAAKW,WAAW,6BAChBX,KAAKY,WAAW,MAInBd,EAAO,qBAAuB,CAC1BC,KAAM,WACJC,KAAKC,mBACFC,YAAY,mCACfF,KAAKS,WAAU,EAAM,UACrBT,KAAKM,eAAeC,QAAQC,oBAC5BR,KAAKU,UAAU,UAAU,UAAU,WACnCV,KAAKW,WAAW,+BAItBb,EAAO,UAAY,CACfC,KAAM,WACJC,KAAKC,mBACFC,YAAY,kBACZA,YAAY,IAAIK,QAAQQ,cAAc,CACrC,CAAC,UAAW,WACZ,CAAC,UAAW,WACZ,CAAC,UAAW,aACV,QACNf,KAAKS,WAAU,EAAK,UACpBT,KAAKM,eAAeC,QAAQC,oBAC5BR,KAAKU,UAAU,UAAU,UAAU,WACnCV,KAAKW,WAAW,qDAnHtB","file":"js/chunk-2d0ea132.b4263f49.js","sourcesContent":["export default function define(Blocks: Blockly.BlockDefinitions) {\n\n  Blocks['accisgesturenew'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(\"accelerometer.is_gesture(\");\n      this.appendValueInput(\"text\")\n          .setCheck(null);\n      this.appendDummyInput()\n          .appendField(\")\");\n      this.setInputsInline(true); \n      this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);\n      this.setOutput(true, null);\n      this.setColour(\"#E57E16\",\"#E57E16\",\"#b87533\");\n   this.setTooltip(\"\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\n  Blocks['accisgesture'] = {\n    init: function () {\n      this.appendDummyInput()\n        .appendField('accelerometer.is_gesture(')\n        .appendField(new Blockly.FieldTextInput(\"\"), \"gesture1\")\n        .appendField(')');\n      this.setInputsInline(false);\n      this.setOutput(true, null);\n      this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);\n      this.setColour(\"#E57E16\",\"#E57E16\",\"#b87533\");\n      this.setTooltip('If the gesture is this, then do this');\n      this.setHelpUrl('');\n    },\n  };\n\n\n  Blocks['accwasgesturenew'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(\"accelerometer.was_gesture(\");\n      this.appendValueInput(\"text\")\n          .setCheck(null);\n      this.appendDummyInput()\n          .appendField(\")\");\n      this.setInputsInline(true); \n      this.setOutput(true, null);\n      this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);\n      this.setColour(\"#E57E16\",\"#E57E16\",\"#b87533\");\n   this.setTooltip(\"\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\n  Blocks['accwasgesture'] = {\n    init: function () {\n      this.appendDummyInput()\n        .appendField('accelerometer.was_gesture(')\n        .appendField(new Blockly.FieldTextInput(\"\"), \"gesture2\")\n        .appendField(')');\n      this.setInputsInline(false);\n      this.setOutput(true, null);\n      this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);\n      this.setColour(\"#E57E16\",\"#E57E16\",\"#b87533\");\n      this.setTooltip('If the gesture is this, then do this');\n      this.setHelpUrl('');\n    },\n  };\n\nvar gesture_dropdown = [\n    [\"'shake'\", \"'shake'\"],\n    [\"'up'\",\"'up'\"], \n    [\"'down'\",\"'down'\"], \n    [\"'left'\",\"'left'\"],\n    [\"'right'\", \"'right'\"],\n    [\"'face up'\", \"'face up'\"],\n    [\"'face down'\", \"'face down'\"],\n    [\"'freefall'\", \"'freefall'\"],\n    [\"'3g'\", \"'3g'\"],\n    [\"'6g'\", \"'6g'\"],\n    [\"'8g'\", \"'8g'\"],\n    ];\n  Blocks['accgestures'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(new Blockly.FieldDropdown(gesture_dropdown), \"gestures\");\n      this.setOutput(true,\"String\");\n      this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);\n      this.setColour(\"#E57E16\",\"#E57E16\",\"#b87533\");\n   this.setTooltip(\"list of possible gestures\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\nBlocks[\"acccurrentgesture\"] = {\n    init: function() {\n      this.appendDummyInput()\n        .appendField(\"accelerometer.current_gesture()\")\n      this.setOutput(true, \"String\");\n      this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);\n      this.setColour(\"#E57E16\",\"#E57E16\",\"#b87533\");\n      this.setTooltip(\"reads the current gesture\");\n    }\n  };\n\nBlocks['accget'] = {\n    init: function () {\n      this.appendDummyInput()\n        .appendField(\"accelerometer.\")\n        .appendField(new Blockly.FieldDropdown([\n          [\"get_x()\", \"get_x()\"],\n          [\"get_y()\", \"get_y()\"],\n          [\"get_z()\", \"get_z()\"]\n        ]), \"axis\");\n      this.setOutput(true,\"Number\");\n      this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);\n      this.setColour(\"#E57E16\",\"#E57E16\",\"#b87533\");\n      this.setTooltip(\"reads the current movement on the selected axis\");\n    }\n  }\n\n}"],"sourceRoot":""}